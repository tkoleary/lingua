// Generated by CoffeeScript 1.12.7
var Client, Server, ws;

ws = require('ws');

Client = (function() {
  function Client(socket1) {
    this.socket = socket1;
    this.send({
      command: 'hello',
      protocols: ['http://livereload.com/protocols/official-7'],
      serverName: 'Wintersmith LiveReload'
    });
  }

  Client.prototype.send = function(data) {
    return this.socket.send(JSON.stringify(data));
  };

  return Client;

})();

Server = (function() {
  function Server(options) {
    this.wss = new ws.Server({
      port: options.port
    });
    this.wss.on('connection', this.handleConnection.bind(this));
    this.clients = [];
  }

  Server.prototype.handleConnection = function(socket) {
    var client;
    client = new Client(socket);
    this.clients.push(client);
    socket.on('error', function(err) {});
    return socket.on('close', (function(_this) {
      return function() {
        var idx;
        idx = _this.clients.indexOf(client);
        return _this.clients.splice(idx, 1);
      };
    })(this));
  };

  Server.prototype.send = function(data) {
    var c, i, len, ref, results;
    ref = this.clients;
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      c = ref[i];
      results.push(c.send(data));
    }
    return results;
  };

  return Server;

})();

module.exports = Server;
