// Generated by CoffeeScript 1.12.7
var LivereloadServer, server;

LivereloadServer = require('./livereload-server');

server = void 0;

module.exports = function(env, callback) {
  var base, clientScript, defaults, key, options, scriptPath;
  env.helpers.livereload = function() {
    return '';
  };
  if (env.mode !== 'preview') {
    return callback();
  }
  defaults = {
    port: 35729,
    clientScript: 'livereload.js',
    liveCSS: true,
    includeIgnored: true
  };
  options = env.config.livereload || {};
  for (key in defaults) {
    if (options[key] == null) {
      options[key] = defaults[key];
    }
  }
  scriptPath = require.resolve('../livereload.js');
  clientScript = new env.plugins.StaticFile({
    full: scriptPath,
    relative: options.clientScript
  });
  clientScript.__env = env;
  if (server == null) {
    server = new LivereloadServer({
      port: options.port
    });
  }
  env.helpers.livereload = function() {
    return "<script src=\"" + clientScript.url + "?port=" + options.port + "\" type=\"text/javascript\"></script>";
  };
  if ((base = env.locals).livereloadScript == null) {
    base.livereloadScript = env.helpers.livereload();
  }
  env.registerGenerator('livereload', function(contents, callback) {
    return callback(null, {
      livereload: clientScript
    });
  });
  env.on('change', function(filename, ignored) {
    if (ignored) {
      if (!options.includeIgnored) {
        return;
      }
      filename = filename.replace(/\.(styl|less|scss|sass)$/i, '.css');
    }
    return server.send({
      command: 'reload',
      path: filename != null ? filename : '',
      liveCSS: options.liveCSS
    });
  });
  env.logger.info("LiveReload socket running on port " + options.port);
  return callback();
};
