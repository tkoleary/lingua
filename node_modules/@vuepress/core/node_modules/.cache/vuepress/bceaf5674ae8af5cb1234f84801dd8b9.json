{"remainingRequest":"/Users/terrenceoleary/sites/GitHub/lingua/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/terrenceoleary/sites/GitHub/lingua/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/terrenceoleary/sites/GitHub/lingua/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/terrenceoleary/sites/GitHub/lingua/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/terrenceoleary/sites/GitHub/lingua/docs/guide/test-pages/arabic/readme.md?vue&type=template&id=8fb8e26e&","dependencies":[{"path":"/Users/terrenceoleary/sites/GitHub/lingua/docs/guide/test-pages/arabic/readme.md","mtime":1595953869462},{"path":"/Users/terrenceoleary/sites/GitHub/lingua/node_modules/cache-loader/dist/cjs.js","mtime":1595953872925},{"path":"/Users/terrenceoleary/sites/GitHub/lingua/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1595953882541},{"path":"/Users/terrenceoleary/sites/GitHub/lingua/node_modules/cache-loader/dist/cjs.js","mtime":1595953872925},{"path":"/Users/terrenceoleary/sites/GitHub/lingua/node_modules/vue-loader/lib/index.js","mtime":1595953882540},{"path":"/Users/terrenceoleary/sites/GitHub/lingua/node_modules/@vuepress/markdown-loader/index.js","mtime":1595953872126}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "ContentSlotsDistributor",
    { attrs: { "slot-key": _vm.$parent.slotKey } },
    [
      _c("h1", { attrs: { id: "arabic" } }, [
        _c("a", { staticClass: "header-anchor", attrs: { href: "#arabic" } }, [
          _vm._v("#")
        ]),
        _vm._v(" Arabic")
      ]),
      _vm._v(" "),
      _c("table", { attrs: { lang: "ar-Arab" } }, [
        _c("thead", [
          _c("tr", [
            _c("th"),
            _vm._v(" "),
            _c("th", [_vm._v("0x00")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x01")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x02")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x03")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x04")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x05")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x06")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x07")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x08")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x09")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x0A")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x0B")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x0C")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x0D")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x0E")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x0F")])
          ])
        ]),
        _vm._v(" "),
        _c("tbody", [
          _c("tr", [
            _c("th", [_vm._v("0x600")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC NUMBER SIGN' (U+0600)"
                }
              },
              [_vm._v("؀")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC SIGN SANAH' (U+0601)"
                }
              },
              [_vm._v("؁")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC FOOTNOTE MARKER' (U+0602)"
                }
              },
              [_vm._v("؂")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC SIGN SAFHA' (U+0603)"
                }
              },
              [_vm._v("؃")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC SIGN SAMVAT' (U+0604)"
                }
              },
              [_vm._v("؄")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC NUMBER MARK ABOVE' (U+0605)"
                }
              },
              [_vm._v("؅")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC-INDIC CUBE ROOT' (U+0606)"
                }
              },
              [_vm._v("؆")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC-INDIC FOURTH ROOT' (U+0607)"
                }
              },
              [_vm._v("؇")]
            ),
            _vm._v(" "),
            _c(
              "td",
              { attrs: { data: "Unicode Character 'ARABIC RAY' (U+0608)" } },
              [_vm._v("؈")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC-INDIC PER MILLE SIGN' (U+0609)"
                }
              },
              [_vm._v("؉")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC-INDIC PER TEN THOUSAND SIGN' (U+060A)"
                }
              },
              [_vm._v("؊")]
            ),
            _vm._v(" "),
            _c(
              "td",
              { attrs: { data: "Unicode Character 'AFGHANI SIGN' (U+060B)" } },
              [_vm._v("؋")]
            ),
            _vm._v(" "),
            _c(
              "td",
              { attrs: { data: "Unicode Character 'ARABIC COMMA' (U+060C)" } },
              [_vm._v("،")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC DATE SEPARATOR' (U+060D)"
                }
              },
              [_vm._v("؍")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC POETIC VERSE SIGN' (U+060E)"
                }
              },
              [_vm._v("؎")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC SIGN MISRA' (U+060F)"
                }
              },
              [_vm._v("؏")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0x610")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC SIGN SALLALLAHOU ALAYHE WASSALLAM' (U+0610)"
                }
              },
              [_vm._v("ؐ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC SIGN ALAYHE ASSALLAM' (U+0611)"
                }
              },
              [_vm._v("ؑ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC SIGN RAHMATULLAH ALAYHE' (U+0612)"
                }
              },
              [_vm._v("ؒ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC SIGN RADI ALLAHOU ANHU' (U+0613)"
                }
              },
              [_vm._v("ؓ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC SIGN TAKHALLUS' (U+0614)"
                }
              },
              [_vm._v("ؔ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC SMALL HIGH TAH' (U+0615)"
                }
              },
              [_vm._v("ؕ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC SMALL HIGH LIGATURE ALEF WITH LAM WITH YEH' (U+0616)"
                }
              },
              [_vm._v("ؖ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC SMALL HIGH ZAIN' (U+0617)"
                }
              },
              [_vm._v("ؗ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC SMALL FATHA' (U+0618)"
                }
              },
              [_vm._v("ؘ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC SMALL DAMMA' (U+0619)"
                }
              },
              [_vm._v("ؙ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC SMALL KASRA' (U+061A)"
                }
              },
              [_vm._v("ؚ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: { data: "Unicode Character 'ARABIC SEMICOLON' (U+061B)" }
              },
              [_vm._v("؛")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER MARK' (U+061C)"
                }
              },
              [_vm._v("؜")]
            ),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+061D" } }, [_vm._v("؝")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC TRIPLE DOT PUNCTUATION MARK' (U+061E)"
                }
              },
              [_vm._v("؞")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC QUESTION MARK' (U+061F)"
                }
              },
              [_vm._v("؟")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0x620")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER KASHMIRI YEH' (U+0620)"
                }
              },
              [_vm._v("ؠ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER HAMZA' (U+0621)"
                }
              },
              [_vm._v("ء")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER ALEF WITH MADDA ABOVE' (U+0622)"
                }
              },
              [_vm._v("آ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER ALEF WITH HAMZA ABOVE' (U+0623)"
                }
              },
              [_vm._v("أ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER WAW WITH HAMZA ABOVE' (U+0624)"
                }
              },
              [_vm._v("ؤ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER ALEF WITH HAMZA BELOW' (U+0625)"
                }
              },
              [_vm._v("إ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER YEH WITH HAMZA ABOVE' (U+0626)"
                }
              },
              [_vm._v("ئ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER ALEF' (U+0627)"
                }
              },
              [_vm._v("ا")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER BEH' (U+0628)"
                }
              },
              [_vm._v("ب")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER TEH MARBUTA' (U+0629)"
                }
              },
              [_vm._v("ة")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER TEH' (U+062A)"
                }
              },
              [_vm._v("ت")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER THEH' (U+062B)"
                }
              },
              [_vm._v("ث")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER JEEM' (U+062C)"
                }
              },
              [_vm._v("ج")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER HAH' (U+062D)"
                }
              },
              [_vm._v("ح")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER KHAH' (U+062E)"
                }
              },
              [_vm._v("خ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER DAL' (U+062F)"
                }
              },
              [_vm._v("د")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0x630")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER THAL' (U+0630)"
                }
              },
              [_vm._v("ذ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER REH' (U+0631)"
                }
              },
              [_vm._v("ر")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER ZAIN' (U+0632)"
                }
              },
              [_vm._v("ز")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER SEEN' (U+0633)"
                }
              },
              [_vm._v("س")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER SHEEN' (U+0634)"
                }
              },
              [_vm._v("ش")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER SAD' (U+0635)"
                }
              },
              [_vm._v("ص")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER DAD' (U+0636)"
                }
              },
              [_vm._v("ض")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER TAH' (U+0637)"
                }
              },
              [_vm._v("ط")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER ZAH' (U+0638)"
                }
              },
              [_vm._v("ظ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER AIN' (U+0639)"
                }
              },
              [_vm._v("ع")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER GHAIN' (U+063A)"
                }
              },
              [_vm._v("غ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER KEHEH WITH TWO DOTS ABOVE' (U+063B)"
                }
              },
              [_vm._v("ػ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER KEHEH WITH THREE DOTS BELOW' (U+063C)"
                }
              },
              [_vm._v("ؼ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER FARSI YEH WITH INVERTED V' (U+063D)"
                }
              },
              [_vm._v("ؽ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER FARSI YEH WITH TWO DOTS ABOVE' (U+063E)"
                }
              },
              [_vm._v("ؾ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER FARSI YEH WITH THREE DOTS ABOVE' (U+063F)"
                }
              },
              [_vm._v("ؿ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0x640")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: { data: "Unicode Character 'ARABIC TATWEEL' (U+0640)" }
              },
              [_vm._v("ـ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER FEH' (U+0641)"
                }
              },
              [_vm._v("ف")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER QAF' (U+0642)"
                }
              },
              [_vm._v("ق")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER KAF' (U+0643)"
                }
              },
              [_vm._v("ك")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER LAM' (U+0644)"
                }
              },
              [_vm._v("ل")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER MEEM' (U+0645)"
                }
              },
              [_vm._v("م")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER NOON' (U+0646)"
                }
              },
              [_vm._v("ن")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER HEH' (U+0647)"
                }
              },
              [_vm._v("ه")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER WAW' (U+0648)"
                }
              },
              [_vm._v("و")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER ALEF MAKSURA' (U+0649)"
                }
              },
              [_vm._v("ى")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER YEH' (U+064A)"
                }
              },
              [_vm._v("ي")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: { data: "Unicode Character 'ARABIC FATHATAN' (U+064B)" }
              },
              [_vm._v("ً")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: { data: "Unicode Character 'ARABIC DAMMATAN' (U+064C)" }
              },
              [_vm._v("ٌ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: { data: "Unicode Character 'ARABIC KASRATAN' (U+064D)" }
              },
              [_vm._v("ٍ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              { attrs: { data: "Unicode Character 'ARABIC FATHA' (U+064E)" } },
              [_vm._v("َ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              { attrs: { data: "Unicode Character 'ARABIC DAMMA' (U+064F)" } },
              [_vm._v("ُ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0x650")]),
            _vm._v(" "),
            _c(
              "td",
              { attrs: { data: "Unicode Character 'ARABIC KASRA' (U+0650)" } },
              [_vm._v("ِ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              { attrs: { data: "Unicode Character 'ARABIC SHADDA' (U+0651)" } },
              [_vm._v("ّ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              { attrs: { data: "Unicode Character 'ARABIC SUKUN' (U+0652)" } },
              [_vm._v("ْ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC MADDAH ABOVE' (U+0653)"
                }
              },
              [_vm._v("ٓ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC HAMZA ABOVE' (U+0654)"
                }
              },
              [_vm._v("ٔ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC HAMZA BELOW' (U+0655)"
                }
              },
              [_vm._v("ٕ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC SUBSCRIPT ALEF' (U+0656)"
                }
              },
              [_vm._v("ٖ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC INVERTED DAMMA' (U+0657)"
                }
              },
              [_vm._v("ٗ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC MARK NOON GHUNNA' (U+0658)"
                }
              },
              [_vm._v("٘")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: { data: "Unicode Character 'ARABIC ZWARAKAY' (U+0659)" }
              },
              [_vm._v("ٙ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC VOWEL SIGN SMALL V ABOVE' (U+065A)"
                }
              },
              [_vm._v("ٚ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC VOWEL SIGN INVERTED SMALL V ABOVE' (U+065B)"
                }
              },
              [_vm._v("ٛ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC VOWEL SIGN DOT BELOW' (U+065C)"
                }
              },
              [_vm._v("ٜ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC REVERSED DAMMA' (U+065D)"
                }
              },
              [_vm._v("ٝ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC FATHA WITH TWO DOTS' (U+065E)"
                }
              },
              [_vm._v("ٞ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC WAVY HAMZA BELOW' (U+065F)"
                }
              },
              [_vm._v("ٟ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0x660")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC-INDIC DIGIT ZERO' (U+0660)"
                }
              },
              [_vm._v("٠")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC-INDIC DIGIT ONE' (U+0661)"
                }
              },
              [_vm._v("١")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC-INDIC DIGIT TWO' (U+0662)"
                }
              },
              [_vm._v("٢")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC-INDIC DIGIT THREE' (U+0663)"
                }
              },
              [_vm._v("٣")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC-INDIC DIGIT FOUR' (U+0664)"
                }
              },
              [_vm._v("٤")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC-INDIC DIGIT FIVE' (U+0665)"
                }
              },
              [_vm._v("٥")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC-INDIC DIGIT SIX' (U+0666)"
                }
              },
              [_vm._v("٦")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC-INDIC DIGIT SEVEN' (U+0667)"
                }
              },
              [_vm._v("٧")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC-INDIC DIGIT EIGHT' (U+0668)"
                }
              },
              [_vm._v("٨")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC-INDIC DIGIT NINE' (U+0669)"
                }
              },
              [_vm._v("٩")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC PERCENT SIGN' (U+066A)"
                }
              },
              [_vm._v("٪")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC DECIMAL SEPARATOR' (U+066B)"
                }
              },
              [_vm._v("٫")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC THOUSANDS SEPARATOR' (U+066C)"
                }
              },
              [_vm._v("٬")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC FIVE POINTED STAR' (U+066D)"
                }
              },
              [_vm._v("٭")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER DOTLESS BEH' (U+066E)"
                }
              },
              [_vm._v("ٮ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER DOTLESS QAF' (U+066F)"
                }
              },
              [_vm._v("ٯ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0x670")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER SUPERSCRIPT ALEF' (U+0670)"
                }
              },
              [_vm._v("ٰ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER ALEF WASLA' (U+0671)"
                }
              },
              [_vm._v("ٱ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER ALEF WITH WAVY HAMZA ABOVE' (U+0672)"
                }
              },
              [_vm._v("ٲ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER ALEF WITH WAVY HAMZA BELOW' (U+0673)"
                }
              },
              [_vm._v("ٳ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER HIGH HAMZA' (U+0674)"
                }
              },
              [_vm._v("ٴ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER HIGH HAMZA ALEF' (U+0675)"
                }
              },
              [_vm._v("ٵ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER HIGH HAMZA WAW' (U+0676)"
                }
              },
              [_vm._v("ٶ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER U WITH HAMZA ABOVE' (U+0677)"
                }
              },
              [_vm._v("ٷ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER HIGH HAMZA YEH' (U+0678)"
                }
              },
              [_vm._v("ٸ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER TTEH' (U+0679)"
                }
              },
              [_vm._v("ٹ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER TTEHEH' (U+067A)"
                }
              },
              [_vm._v("ٺ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER BEEH' (U+067B)"
                }
              },
              [_vm._v("ٻ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER TEH WITH RING' (U+067C)"
                }
              },
              [_vm._v("ټ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER TEH WITH THREE DOTS ABOVE DOWNWARDS' (U+067D)"
                }
              },
              [_vm._v("ٽ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER PEH' (U+067E)"
                }
              },
              [_vm._v("پ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER TEHEH' (U+067F)"
                }
              },
              [_vm._v("ٿ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0x680")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER BEHEH' (U+0680)"
                }
              },
              [_vm._v("ڀ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER HAH WITH HAMZA ABOVE' (U+0681)"
                }
              },
              [_vm._v("ځ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER HAH WITH TWO DOTS VERTICAL ABOVE' (U+0682)"
                }
              },
              [_vm._v("ڂ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER NYEH' (U+0683)"
                }
              },
              [_vm._v("ڃ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER DYEH' (U+0684)"
                }
              },
              [_vm._v("ڄ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER HAH WITH THREE DOTS ABOVE' (U+0685)"
                }
              },
              [_vm._v("څ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER TCHEH' (U+0686)"
                }
              },
              [_vm._v("چ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER TCHEHEH' (U+0687)"
                }
              },
              [_vm._v("ڇ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER DDAL' (U+0688)"
                }
              },
              [_vm._v("ڈ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER DAL WITH RING' (U+0689)"
                }
              },
              [_vm._v("ډ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER DAL WITH DOT BELOW' (U+068A)"
                }
              },
              [_vm._v("ڊ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER DAL WITH DOT BELOW AND SMALL TAH' (U+068B)"
                }
              },
              [_vm._v("ڋ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER DAHAL' (U+068C)"
                }
              },
              [_vm._v("ڌ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER DDAHAL' (U+068D)"
                }
              },
              [_vm._v("ڍ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER DUL' (U+068E)"
                }
              },
              [_vm._v("ڎ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER DAL WITH THREE DOTS ABOVE DOWNWARDS' (U+068F)"
                }
              },
              [_vm._v("ڏ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0x690")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER DAL WITH FOUR DOTS ABOVE' (U+0690)"
                }
              },
              [_vm._v("ڐ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER RREH' (U+0691)"
                }
              },
              [_vm._v("ڑ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER REH WITH SMALL V' (U+0692)"
                }
              },
              [_vm._v("ڒ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER REH WITH RING' (U+0693)"
                }
              },
              [_vm._v("ړ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER REH WITH DOT BELOW' (U+0694)"
                }
              },
              [_vm._v("ڔ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER REH WITH SMALL V BELOW' (U+0695)"
                }
              },
              [_vm._v("ڕ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER REH WITH DOT BELOW AND DOT ABOVE' (U+0696)"
                }
              },
              [_vm._v("ږ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER REH WITH TWO DOTS ABOVE' (U+0697)"
                }
              },
              [_vm._v("ڗ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER JEH' (U+0698)"
                }
              },
              [_vm._v("ژ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER REH WITH FOUR DOTS ABOVE' (U+0699)"
                }
              },
              [_vm._v("ڙ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER SEEN WITH DOT BELOW AND DOT ABOVE' (U+069A)"
                }
              },
              [_vm._v("ښ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER SEEN WITH THREE DOTS BELOW' (U+069B)"
                }
              },
              [_vm._v("ڛ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER SEEN WITH THREE DOTS BELOW AND THREE DOTS ABOVE' (U+069C)"
                }
              },
              [_vm._v("ڜ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER SAD WITH TWO DOTS BELOW' (U+069D)"
                }
              },
              [_vm._v("ڝ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER SAD WITH THREE DOTS ABOVE' (U+069E)"
                }
              },
              [_vm._v("ڞ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER TAH WITH THREE DOTS ABOVE' (U+069F)"
                }
              },
              [_vm._v("ڟ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0x6a0")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER AIN WITH THREE DOTS ABOVE' (U+06A0)"
                }
              },
              [_vm._v("ڠ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER DOTLESS FEH' (U+06A1)"
                }
              },
              [_vm._v("ڡ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER FEH WITH DOT MOVED BELOW' (U+06A2)"
                }
              },
              [_vm._v("ڢ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER FEH WITH DOT BELOW' (U+06A3)"
                }
              },
              [_vm._v("ڣ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER VEH' (U+06A4)"
                }
              },
              [_vm._v("ڤ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER FEH WITH THREE DOTS BELOW' (U+06A5)"
                }
              },
              [_vm._v("ڥ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER PEHEH' (U+06A6)"
                }
              },
              [_vm._v("ڦ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER QAF WITH DOT ABOVE' (U+06A7)"
                }
              },
              [_vm._v("ڧ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER QAF WITH THREE DOTS ABOVE' (U+06A8)"
                }
              },
              [_vm._v("ڨ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER KEHEH' (U+06A9)"
                }
              },
              [_vm._v("ک")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER SWASH KAF' (U+06AA)"
                }
              },
              [_vm._v("ڪ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER KAF WITH RING' (U+06AB)"
                }
              },
              [_vm._v("ګ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER KAF WITH DOT ABOVE' (U+06AC)"
                }
              },
              [_vm._v("ڬ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: { data: "Unicode Character 'ARABIC LETTER NG' (U+06AD)" }
              },
              [_vm._v("ڭ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER KAF WITH THREE DOTS BELOW' (U+06AE)"
                }
              },
              [_vm._v("ڮ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER GAF' (U+06AF)"
                }
              },
              [_vm._v("گ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0x6b0")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER GAF WITH RING' (U+06B0)"
                }
              },
              [_vm._v("ڰ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER NGOEH' (U+06B1)"
                }
              },
              [_vm._v("ڱ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER GAF WITH TWO DOTS BELOW' (U+06B2)"
                }
              },
              [_vm._v("ڲ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER GUEH' (U+06B3)"
                }
              },
              [_vm._v("ڳ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER GAF WITH THREE DOTS ABOVE' (U+06B4)"
                }
              },
              [_vm._v("ڴ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER LAM WITH SMALL V' (U+06B5)"
                }
              },
              [_vm._v("ڵ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER LAM WITH DOT ABOVE' (U+06B6)"
                }
              },
              [_vm._v("ڶ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER LAM WITH THREE DOTS ABOVE' (U+06B7)"
                }
              },
              [_vm._v("ڷ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER LAM WITH THREE DOTS BELOW' (U+06B8)"
                }
              },
              [_vm._v("ڸ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER NOON WITH DOT BELOW' (U+06B9)"
                }
              },
              [_vm._v("ڹ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER NOON GHUNNA' (U+06BA)"
                }
              },
              [_vm._v("ں")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER RNOON' (U+06BB)"
                }
              },
              [_vm._v("ڻ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER NOON WITH RING' (U+06BC)"
                }
              },
              [_vm._v("ڼ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER NOON WITH THREE DOTS ABOVE' (U+06BD)"
                }
              },
              [_vm._v("ڽ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER HEH DOACHASHMEE' (U+06BE)"
                }
              },
              [_vm._v("ھ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER TCHEH WITH DOT ABOVE' (U+06BF)"
                }
              },
              [_vm._v("ڿ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0x6c0")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER HEH WITH YEH ABOVE' (U+06C0)"
                }
              },
              [_vm._v("ۀ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER HEH GOAL' (U+06C1)"
                }
              },
              [_vm._v("ہ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER HEH GOAL WITH HAMZA ABOVE' (U+06C2)"
                }
              },
              [_vm._v("ۂ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER TEH MARBUTA GOAL' (U+06C3)"
                }
              },
              [_vm._v("ۃ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER WAW WITH RING' (U+06C4)"
                }
              },
              [_vm._v("ۄ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER KIRGHIZ OE' (U+06C5)"
                }
              },
              [_vm._v("ۅ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: { data: "Unicode Character 'ARABIC LETTER OE' (U+06C6)" }
              },
              [_vm._v("ۆ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: { data: "Unicode Character 'ARABIC LETTER U' (U+06C7)" }
              },
              [_vm._v("ۇ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: { data: "Unicode Character 'ARABIC LETTER YU' (U+06C8)" }
              },
              [_vm._v("ۈ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER KIRGHIZ YU' (U+06C9)"
                }
              },
              [_vm._v("ۉ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER WAW WITH TWO DOTS ABOVE' (U+06CA)"
                }
              },
              [_vm._v("ۊ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: { data: "Unicode Character 'ARABIC LETTER VE' (U+06CB)" }
              },
              [_vm._v("ۋ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER FARSI YEH' (U+06CC)"
                }
              },
              [_vm._v("ی")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER YEH WITH TAIL' (U+06CD)"
                }
              },
              [_vm._v("ۍ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER YEH WITH SMALL V' (U+06CE)"
                }
              },
              [_vm._v("ێ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER WAW WITH DOT ABOVE' (U+06CF)"
                }
              },
              [_vm._v("ۏ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0x6d0")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: { data: "Unicode Character 'ARABIC LETTER E' (U+06D0)" }
              },
              [_vm._v("ې")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER YEH WITH THREE DOTS BELOW' (U+06D1)"
                }
              },
              [_vm._v("ۑ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER YEH BARREE' (U+06D2)"
                }
              },
              [_vm._v("ے")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER YEH BARREE WITH HAMZA ABOVE' (U+06D3)"
                }
              },
              [_vm._v("ۓ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: { data: "Unicode Character 'ARABIC FULL STOP' (U+06D4)" }
              },
              [_vm._v("۔")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: { data: "Unicode Character 'ARABIC LETTER AE' (U+06D5)" }
              },
              [_vm._v("ە")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC SMALL HIGH LIGATURE SAD WITH LAM WITH ALEF MAKSURA' (U+06D6)"
                }
              },
              [_vm._v("ۖ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC SMALL HIGH LIGATURE QAF WITH LAM WITH ALEF MAKSURA' (U+06D7)"
                }
              },
              [_vm._v("ۗ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC SMALL HIGH MEEM INITIAL FORM' (U+06D8)"
                }
              },
              [_vm._v("ۘ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC SMALL HIGH LAM ALEF' (U+06D9)"
                }
              },
              [_vm._v("ۙ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC SMALL HIGH JEEM' (U+06DA)"
                }
              },
              [_vm._v("ۚ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC SMALL HIGH THREE DOTS' (U+06DB)"
                }
              },
              [_vm._v("ۛ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC SMALL HIGH SEEN' (U+06DC)"
                }
              },
              [_vm._v("ۜ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC END OF AYAH' (U+06DD)"
                }
              },
              [_vm._v("۝")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC START OF RUB EL HIZB' (U+06DE)"
                }
              },
              [_vm._v("۞")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC SMALL HIGH ROUNDED ZERO' (U+06DF)"
                }
              },
              [_vm._v("۟")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0x6e0")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC SMALL HIGH UPRIGHT RECTANGULAR ZERO' (U+06E0)"
                }
              },
              [_vm._v("۠")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC SMALL HIGH DOTLESS HEAD OF KHAH' (U+06E1)"
                }
              },
              [_vm._v("ۡ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC SMALL HIGH MEEM ISOLATED FORM' (U+06E2)"
                }
              },
              [_vm._v("ۢ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC SMALL LOW SEEN' (U+06E3)"
                }
              },
              [_vm._v("ۣ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC SMALL HIGH MADDA' (U+06E4)"
                }
              },
              [_vm._v("ۤ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: { data: "Unicode Character 'ARABIC SMALL WAW' (U+06E5)" }
              },
              [_vm._v("ۥ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: { data: "Unicode Character 'ARABIC SMALL YEH' (U+06E6)" }
              },
              [_vm._v("ۦ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC SMALL HIGH YEH' (U+06E7)"
                }
              },
              [_vm._v("ۧ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC SMALL HIGH NOON' (U+06E8)"
                }
              },
              [_vm._v("ۨ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC PLACE OF SAJDAH' (U+06E9)"
                }
              },
              [_vm._v("۩")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC EMPTY CENTRE LOW STOP' (U+06EA)"
                }
              },
              [_vm._v("۪")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC EMPTY CENTRE HIGH STOP' (U+06EB)"
                }
              },
              [_vm._v("۫")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC ROUNDED HIGH STOP WITH FILLED CENTRE' (U+06EC)"
                }
              },
              [_vm._v("۬")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC SMALL LOW MEEM' (U+06ED)"
                }
              },
              [_vm._v("ۭ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER DAL WITH INVERTED V' (U+06EE)"
                }
              },
              [_vm._v("ۮ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER REH WITH INVERTED V' (U+06EF)"
                }
              },
              [_vm._v("ۯ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0x6f0")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'EXTENDED ARABIC-INDIC DIGIT ZERO' (U+06F0)"
                }
              },
              [_vm._v("۰")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'EXTENDED ARABIC-INDIC DIGIT ONE' (U+06F1)"
                }
              },
              [_vm._v("۱")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'EXTENDED ARABIC-INDIC DIGIT TWO' (U+06F2)"
                }
              },
              [_vm._v("۲")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'EXTENDED ARABIC-INDIC DIGIT THREE' (U+06F3)"
                }
              },
              [_vm._v("۳")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'EXTENDED ARABIC-INDIC DIGIT FOUR' (U+06F4)"
                }
              },
              [_vm._v("۴")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'EXTENDED ARABIC-INDIC DIGIT FIVE' (U+06F5)"
                }
              },
              [_vm._v("۵")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'EXTENDED ARABIC-INDIC DIGIT SIX' (U+06F6)"
                }
              },
              [_vm._v("۶")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'EXTENDED ARABIC-INDIC DIGIT SEVEN' (U+06F7)"
                }
              },
              [_vm._v("۷")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'EXTENDED ARABIC-INDIC DIGIT EIGHT' (U+06F8)"
                }
              },
              [_vm._v("۸")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'EXTENDED ARABIC-INDIC DIGIT NINE' (U+06F9)"
                }
              },
              [_vm._v("۹")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER SHEEN WITH DOT BELOW' (U+06FA)"
                }
              },
              [_vm._v("ۺ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER DAD WITH DOT BELOW' (U+06FB)"
                }
              },
              [_vm._v("ۻ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER GHAIN WITH DOT BELOW' (U+06FC)"
                }
              },
              [_vm._v("ۼ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC SIGN SINDHI AMPERSAND' (U+06FD)"
                }
              },
              [_vm._v("۽")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC SIGN SINDHI POSTPOSITION MEN' (U+06FE)"
                }
              },
              [_vm._v("۾")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER HEH WITH INVERTED V' (U+06FF)"
                }
              },
              [_vm._v("ۿ")]
            )
          ])
        ])
      ]),
      _vm._v(" "),
      _c("h2", { attrs: { id: "arabic-supplement" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#arabic-supplement" }
          },
          [_vm._v("#")]
        ),
        _vm._v(" Arabic supplement")
      ]),
      _vm._v(" "),
      _c("table", [
        _c("thead", [
          _c("tr", [
            _c("th"),
            _vm._v(" "),
            _c("th", [_vm._v("0x00")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x01")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x02")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x03")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x04")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x05")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x06")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x07")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x08")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x09")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x0A")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x0B")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x0C")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x0D")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x0E")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x0F")])
          ])
        ]),
        _vm._v(" "),
        _c("tbody", [
          _c("tr", [
            _c("th", [_vm._v("0x750")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER BEH WITH THREE DOTS HORIZONTALLY BELOW' (U+0750)"
                }
              },
              [_vm._v("ݐ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER BEH WITH DOT BELOW AND THREE DOTS ABOVE' (U+0751)"
                }
              },
              [_vm._v("ݑ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER BEH WITH THREE DOTS POINTING UPWARDS BELOW' (U+0752)"
                }
              },
              [_vm._v("ݒ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER BEH WITH THREE DOTS POINTING UPWARDS BELOW AND TWO DOTS ABOVE' (U+0753)"
                }
              },
              [_vm._v("ݓ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER BEH WITH TWO DOTS BELOW AND DOT ABOVE' (U+0754)"
                }
              },
              [_vm._v("ݔ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER BEH WITH INVERTED SMALL V BELOW' (U+0755)"
                }
              },
              [_vm._v("ݕ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER BEH WITH SMALL V' (U+0756)"
                }
              },
              [_vm._v("ݖ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER HAH WITH TWO DOTS ABOVE' (U+0757)"
                }
              },
              [_vm._v("ݗ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER HAH WITH THREE DOTS POINTING UPWARDS BELOW' (U+0758)"
                }
              },
              [_vm._v("ݘ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER DAL WITH TWO DOTS VERTICALLY BELOW AND SMALL TAH' (U+0759)"
                }
              },
              [_vm._v("ݙ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER DAL WITH INVERTED SMALL V BELOW' (U+075A)"
                }
              },
              [_vm._v("ݚ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER REH WITH STROKE' (U+075B)"
                }
              },
              [_vm._v("ݛ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER SEEN WITH FOUR DOTS ABOVE' (U+075C)"
                }
              },
              [_vm._v("ݜ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER AIN WITH TWO DOTS ABOVE' (U+075D)"
                }
              },
              [_vm._v("ݝ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER AIN WITH THREE DOTS POINTING DOWNWARDS ABOVE' (U+075E)"
                }
              },
              [_vm._v("ݞ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER AIN WITH TWO DOTS VERTICALLY ABOVE' (U+075F)"
                }
              },
              [_vm._v("ݟ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0x760")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER FEH WITH TWO DOTS BELOW' (U+0760)"
                }
              },
              [_vm._v("ݠ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER FEH WITH THREE DOTS POINTING UPWARDS BELOW' (U+0761)"
                }
              },
              [_vm._v("ݡ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER KEHEH WITH DOT ABOVE' (U+0762)"
                }
              },
              [_vm._v("ݢ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER KEHEH WITH THREE DOTS ABOVE' (U+0763)"
                }
              },
              [_vm._v("ݣ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER KEHEH WITH THREE DOTS POINTING UPWARDS BELOW' (U+0764)"
                }
              },
              [_vm._v("ݤ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER MEEM WITH DOT ABOVE' (U+0765)"
                }
              },
              [_vm._v("ݥ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER MEEM WITH DOT BELOW' (U+0766)"
                }
              },
              [_vm._v("ݦ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER NOON WITH TWO DOTS BELOW' (U+0767)"
                }
              },
              [_vm._v("ݧ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER NOON WITH SMALL TAH' (U+0768)"
                }
              },
              [_vm._v("ݨ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER NOON WITH SMALL V' (U+0769)"
                }
              },
              [_vm._v("ݩ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER LAM WITH BAR' (U+076A)"
                }
              },
              [_vm._v("ݪ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER REH WITH TWO DOTS VERTICALLY ABOVE' (U+076B)"
                }
              },
              [_vm._v("ݫ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER REH WITH HAMZA ABOVE' (U+076C)"
                }
              },
              [_vm._v("ݬ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER SEEN WITH TWO DOTS VERTICALLY ABOVE' (U+076D)"
                }
              },
              [_vm._v("ݭ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER HAH WITH SMALL ARABIC LETTER TAH BELOW' (U+076E)"
                }
              },
              [_vm._v("ݮ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER HAH WITH SMALL ARABIC LETTER TAH AND TWO DOTS' (U+076F)"
                }
              },
              [_vm._v("ݯ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0x770")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER SEEN WITH SMALL ARABIC LETTER TAH AND TWO DOTS' (U+0770)"
                }
              },
              [_vm._v("ݰ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER REH WITH SMALL ARABIC LETTER TAH AND TWO DOTS' (U+0771)"
                }
              },
              [_vm._v("ݱ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER HAH WITH SMALL ARABIC LETTER TAH ABOVE' (U+0772)"
                }
              },
              [_vm._v("ݲ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER ALEF WITH EXTENDED ARABIC-INDIC DIGIT TWO ABOVE' (U+0773)"
                }
              },
              [_vm._v("ݳ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER ALEF WITH EXTENDED ARABIC-INDIC DIGIT THREE ABOVE' (U+0774)"
                }
              },
              [_vm._v("ݴ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER FARSI YEH WITH EXTENDED ARABIC-INDIC DIGIT TWO ABOVE' (U+0775)"
                }
              },
              [_vm._v("ݵ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER FARSI YEH WITH EXTENDED ARABIC-INDIC DIGIT THREE ABOVE' (U+0776)"
                }
              },
              [_vm._v("ݶ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER FARSI YEH WITH EXTENDED ARABIC-INDIC DIGIT FOUR BELOW' (U+0777)"
                }
              },
              [_vm._v("ݷ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER WAW WITH EXTENDED ARABIC-INDIC DIGIT TWO ABOVE' (U+0778)"
                }
              },
              [_vm._v("ݸ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER WAW WITH EXTENDED ARABIC-INDIC DIGIT THREE ABOVE' (U+0779)"
                }
              },
              [_vm._v("ݹ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER YEH BARREE WITH EXTENDED ARABIC-INDIC DIGIT TWO ABOVE' (U+077A)"
                }
              },
              [_vm._v("ݺ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER YEH BARREE WITH EXTENDED ARABIC-INDIC DIGIT THREE ABOVE' (U+077B)"
                }
              },
              [_vm._v("ݻ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER HAH WITH EXTENDED ARABIC-INDIC DIGIT FOUR BELOW' (U+077C)"
                }
              },
              [_vm._v("ݼ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER SEEN WITH EXTENDED ARABIC-INDIC DIGIT FOUR ABOVE' (U+077D)"
                }
              },
              [_vm._v("ݽ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER SEEN WITH INVERTED V' (U+077E)"
                }
              },
              [_vm._v("ݾ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER KAF WITH TWO DOTS ABOVE' (U+077F)"
                }
              },
              [_vm._v("ݿ")]
            )
          ])
        ])
      ]),
      _vm._v(" "),
      _c("h2", { attrs: { id: "arabic-extended-a" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#arabic-extended-a" }
          },
          [_vm._v("#")]
        ),
        _vm._v(" Arabic extended A")
      ]),
      _vm._v(" "),
      _c("table", [
        _c("thead", [
          _c("tr", [
            _c("th"),
            _vm._v(" "),
            _c("th", [_vm._v("0x00")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x01")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x02")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x03")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x04")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x05")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x06")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x07")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x08")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x09")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x0A")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x0B")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x0C")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x0D")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x0E")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x0F")])
          ])
        ]),
        _vm._v(" "),
        _c("tbody", [
          _c("tr", [
            _c("th", [_vm._v("0x8a0")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER BEH WITH SMALL V BELOW' (U+08A0)"
                }
              },
              [_vm._v("ࢠ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER BEH WITH HAMZA ABOVE' (U+08A1)"
                }
              },
              [_vm._v("ࢡ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER JEEM WITH TWO DOTS ABOVE' (U+08A2)"
                }
              },
              [_vm._v("ࢢ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER TAH WITH TWO DOTS ABOVE' (U+08A3)"
                }
              },
              [_vm._v("ࢣ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER FEH WITH DOT BELOW AND THREE DOTS ABOVE' (U+08A4)"
                }
              },
              [_vm._v("ࢤ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER QAF WITH DOT BELOW' (U+08A5)"
                }
              },
              [_vm._v("ࢥ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER LAM WITH DOUBLE BAR' (U+08A6)"
                }
              },
              [_vm._v("ࢦ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER MEEM WITH THREE DOTS ABOVE' (U+08A7)"
                }
              },
              [_vm._v("ࢧ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER YEH WITH TWO DOTS BELOW AND HAMZA ABOVE' (U+08A8)"
                }
              },
              [_vm._v("ࢨ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER YEH WITH TWO DOTS BELOW AND DOT ABOVE' (U+08A9)"
                }
              },
              [_vm._v("ࢩ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER REH WITH LOOP' (U+08AA)"
                }
              },
              [_vm._v("ࢪ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER WAW WITH DOT WITHIN' (U+08AB)"
                }
              },
              [_vm._v("ࢫ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER ROHINGYA YEH' (U+08AC)"
                }
              },
              [_vm._v("ࢬ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER LOW ALEF' (U+08AD)"
                }
              },
              [_vm._v("ࢭ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER DAL WITH THREE DOTS BELOW' (U+08AE)"
                }
              },
              [_vm._v("ࢮ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER SAD WITH THREE DOTS BELOW' (U+08AF)"
                }
              },
              [_vm._v("ࢯ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0x8b0")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER GAF WITH INVERTED STROKE' (U+08B0)"
                }
              },
              [_vm._v("ࢰ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER STRAIGHT WAW' (U+08B1)"
                }
              },
              [_vm._v("ࢱ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER ZAIN WITH INVERTED V ABOVE' (U+08B2)"
                }
              },
              [_vm._v("ࢲ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER AIN WITH THREE DOTS BELOW' (U+08B3)"
                }
              },
              [_vm._v("ࢳ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER KAF WITH DOT BELOW' (U+08B4)"
                }
              },
              [_vm._v("ࢴ")]
            ),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+08B5" } }, [_vm._v("ࢵ")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER BEH WITH SMALL MEEM ABOVE' (U+08B6)"
                }
              },
              [_vm._v("ࢶ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER PEH WITH SMALL MEEM ABOVE' (U+08B7)"
                }
              },
              [_vm._v("ࢷ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER TEH WITH SMALL TEH ABOVE' (U+08B8)"
                }
              },
              [_vm._v("ࢸ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER REH WITH SMALL NOON ABOVE' (U+08B9)"
                }
              },
              [_vm._v("ࢹ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER YEH WITH TWO DOTS BELOW AND SMALL NOON ABOVE' (U+08BA)"
                }
              },
              [_vm._v("ࢺ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER AFRICAN FEH' (U+08BB)"
                }
              },
              [_vm._v("ࢻ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC LETTER AFRICAN QAF' (U+08BC)"
                }
              },
              [_vm._v("ࢼ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER AFRICAN NOON' (U+08BD)"
                }
              },
              [_vm._v("ࢽ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER PEH WITH SMALL V' (U+08BE)"
                }
              },
              [_vm._v("ࢾ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER TEH WITH SMALL V' (U+08BF)"
                }
              },
              [_vm._v("ࢿ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0x8c0")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER TTEH WITH SMALL V' (U+08C0)"
                }
              },
              [_vm._v("ࣀ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER TCHEH WITH SMALL V' (U+08C1)"
                }
              },
              [_vm._v("ࣁ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER KEHEH WITH SMALL V' (U+08C2)"
                }
              },
              [_vm._v("ࣂ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER GHAIN WITH THREE DOTS ABOVE' (U+08C3)"
                }
              },
              [_vm._v("ࣃ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER AFRICAN QAF WITH THREE DOTS ABOVE' (U+08C4)"
                }
              },
              [_vm._v("ࣄ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER JEEM WITH THREE DOTS ABOVE' (U+08C5)"
                }
              },
              [_vm._v("ࣅ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER JEEM WITH THREE DOTS BELOW' (U+08C6)"
                }
              },
              [_vm._v("ࣆ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER LAM WITH SMALL ARABIC LETTER TAH ABOVE' (U+08C7)"
                }
              },
              [_vm._v("ࣇ")]
            ),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+08C8" } }, [_vm._v("ࣈ")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+08C9" } }, [_vm._v("ࣉ")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+08CA" } }, [_vm._v("࣊")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+08CB" } }, [_vm._v("࣋")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+08CC" } }, [_vm._v("࣌")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+08CD" } }, [_vm._v("࣍")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+08CE" } }, [_vm._v("࣎")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+08CF" } }, [_vm._v("࣏")])
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0x8d0")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+08D0" } }, [_vm._v("࣐")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+08D1" } }, [_vm._v("࣑")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+08D2" } }, [_vm._v("࣒")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC SMALL LOW WAW' (U+08D3)"
                }
              },
              [_vm._v("࣓")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC SMALL HIGH WORD AR-RUB' (U+08D4)"
                }
              },
              [_vm._v("ࣔ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC SMALL HIGH SAD' (U+08D5)"
                }
              },
              [_vm._v("ࣕ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC SMALL HIGH AIN' (U+08D6)"
                }
              },
              [_vm._v("ࣖ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC SMALL HIGH QAF' (U+08D7)"
                }
              },
              [_vm._v("ࣗ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC SMALL HIGH NOON WITH KASRA' (U+08D8)"
                }
              },
              [_vm._v("ࣘ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC SMALL LOW NOON WITH KASRA' (U+08D9)"
                }
              },
              [_vm._v("ࣙ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC SMALL HIGH WORD ATH-THALATHA' (U+08DA)"
                }
              },
              [_vm._v("ࣚ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC SMALL HIGH WORD AS-SAJDA' (U+08DB)"
                }
              },
              [_vm._v("ࣛ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC SMALL HIGH WORD AN-NISF' (U+08DC)"
                }
              },
              [_vm._v("ࣜ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC SMALL HIGH WORD SAKTA' (U+08DD)"
                }
              },
              [_vm._v("ࣝ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC SMALL HIGH WORD QIF' (U+08DE)"
                }
              },
              [_vm._v("ࣞ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC SMALL HIGH WORD WAQFA' (U+08DF)"
                }
              },
              [_vm._v("ࣟ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0x8e0")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC SMALL HIGH FOOTNOTE MARKER' (U+08E0)"
                }
              },
              [_vm._v("࣠")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC SMALL HIGH SIGN SAFHA' (U+08E1)"
                }
              },
              [_vm._v("࣡")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC DISPUTED END OF AYAH' (U+08E2)"
                }
              },
              [_vm._v("࣢")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC TURNED DAMMA BELOW' (U+08E3)"
                }
              },
              [_vm._v("ࣣ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC CURLY FATHA' (U+08E4)"
                }
              },
              [_vm._v("ࣤ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC CURLY DAMMA' (U+08E5)"
                }
              },
              [_vm._v("ࣥ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC CURLY KASRA' (U+08E6)"
                }
              },
              [_vm._v("ࣦ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC CURLY FATHATAN' (U+08E7)"
                }
              },
              [_vm._v("ࣧ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC CURLY DAMMATAN' (U+08E8)"
                }
              },
              [_vm._v("ࣨ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC CURLY KASRATAN' (U+08E9)"
                }
              },
              [_vm._v("ࣩ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC TONE ONE DOT ABOVE' (U+08EA)"
                }
              },
              [_vm._v("࣪")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC TONE TWO DOTS ABOVE' (U+08EB)"
                }
              },
              [_vm._v("࣫")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC TONE LOOP ABOVE' (U+08EC)"
                }
              },
              [_vm._v("࣬")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC TONE ONE DOT BELOW' (U+08ED)"
                }
              },
              [_vm._v("࣭")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC TONE TWO DOTS BELOW' (U+08EE)"
                }
              },
              [_vm._v("࣮")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC TONE LOOP BELOW' (U+08EF)"
                }
              },
              [_vm._v("࣯")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0x8f0")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC OPEN FATHATAN' (U+08F0)"
                }
              },
              [_vm._v("ࣰ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC OPEN DAMMATAN' (U+08F1)"
                }
              },
              [_vm._v("ࣱ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC OPEN KASRATAN' (U+08F2)"
                }
              },
              [_vm._v("ࣲ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC SMALL HIGH WAW' (U+08F3)"
                }
              },
              [_vm._v("ࣳ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC FATHA WITH RING' (U+08F4)"
                }
              },
              [_vm._v("ࣴ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC FATHA WITH DOT ABOVE' (U+08F5)"
                }
              },
              [_vm._v("ࣵ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC KASRA WITH DOT BELOW' (U+08F6)"
                }
              },
              [_vm._v("ࣶ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LEFT ARROWHEAD ABOVE' (U+08F7)"
                }
              },
              [_vm._v("ࣷ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC RIGHT ARROWHEAD ABOVE' (U+08F8)"
                }
              },
              [_vm._v("ࣸ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LEFT ARROWHEAD BELOW' (U+08F9)"
                }
              },
              [_vm._v("ࣹ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC RIGHT ARROWHEAD BELOW' (U+08FA)"
                }
              },
              [_vm._v("ࣺ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC DOUBLE RIGHT ARROWHEAD ABOVE' (U+08FB)"
                }
              },
              [_vm._v("ࣻ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC DOUBLE RIGHT ARROWHEAD ABOVE WITH DOT' (U+08FC)"
                }
              },
              [_vm._v("ࣼ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC RIGHT ARROWHEAD ABOVE WITH DOT' (U+08FD)"
                }
              },
              [_vm._v("ࣽ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC DAMMA WITH DOT' (U+08FE)"
                }
              },
              [_vm._v("ࣾ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC MARK SIDEWAYS NOON GHUNNA' (U+08FF)"
                }
              },
              [_vm._v("ࣿ")]
            )
          ])
        ])
      ]),
      _vm._v(" "),
      _c("h2", { attrs: { id: "arabic-presentation-forms-a" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#arabic-presentation-forms-a" }
          },
          [_vm._v("#")]
        ),
        _vm._v(" Arabic presentation forms A")
      ]),
      _vm._v(" "),
      _c("table", [
        _c("thead", [
          _c("tr", [
            _c("th"),
            _vm._v(" "),
            _c("th", [_vm._v("0x00")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x01")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x02")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x03")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x04")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x05")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x06")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x07")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x08")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x09")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x0A")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x0B")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x0C")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x0D")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x0E")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x0F")])
          ])
        ]),
        _vm._v(" "),
        _c("tbody", [
          _c("tr", [
            _c("th", [_vm._v("0xfb50")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER ALEF WASLA ISOLATED FORM' (U+FB50)"
                }
              },
              [_vm._v("ﭐ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER ALEF WASLA FINAL FORM' (U+FB51)"
                }
              },
              [_vm._v("ﭑ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER BEEH ISOLATED FORM' (U+FB52)"
                }
              },
              [_vm._v("ﭒ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER BEEH FINAL FORM' (U+FB53)"
                }
              },
              [_vm._v("ﭓ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER BEEH INITIAL FORM' (U+FB54)"
                }
              },
              [_vm._v("ﭔ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER BEEH MEDIAL FORM' (U+FB55)"
                }
              },
              [_vm._v("ﭕ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER PEH ISOLATED FORM' (U+FB56)"
                }
              },
              [_vm._v("ﭖ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER PEH FINAL FORM' (U+FB57)"
                }
              },
              [_vm._v("ﭗ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER PEH INITIAL FORM' (U+FB58)"
                }
              },
              [_vm._v("ﭘ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER PEH MEDIAL FORM' (U+FB59)"
                }
              },
              [_vm._v("ﭙ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER BEHEH ISOLATED FORM' (U+FB5A)"
                }
              },
              [_vm._v("ﭚ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER BEHEH FINAL FORM' (U+FB5B)"
                }
              },
              [_vm._v("ﭛ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER BEHEH INITIAL FORM' (U+FB5C)"
                }
              },
              [_vm._v("ﭜ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER BEHEH MEDIAL FORM' (U+FB5D)"
                }
              },
              [_vm._v("ﭝ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER TTEHEH ISOLATED FORM' (U+FB5E)"
                }
              },
              [_vm._v("ﭞ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER TTEHEH FINAL FORM' (U+FB5F)"
                }
              },
              [_vm._v("ﭟ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfb60")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER TTEHEH INITIAL FORM' (U+FB60)"
                }
              },
              [_vm._v("ﭠ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER TTEHEH MEDIAL FORM' (U+FB61)"
                }
              },
              [_vm._v("ﭡ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER TEHEH ISOLATED FORM' (U+FB62)"
                }
              },
              [_vm._v("ﭢ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER TEHEH FINAL FORM' (U+FB63)"
                }
              },
              [_vm._v("ﭣ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER TEHEH INITIAL FORM' (U+FB64)"
                }
              },
              [_vm._v("ﭤ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER TEHEH MEDIAL FORM' (U+FB65)"
                }
              },
              [_vm._v("ﭥ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER TTEH ISOLATED FORM' (U+FB66)"
                }
              },
              [_vm._v("ﭦ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER TTEH FINAL FORM' (U+FB67)"
                }
              },
              [_vm._v("ﭧ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER TTEH INITIAL FORM' (U+FB68)"
                }
              },
              [_vm._v("ﭨ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER TTEH MEDIAL FORM' (U+FB69)"
                }
              },
              [_vm._v("ﭩ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER VEH ISOLATED FORM' (U+FB6A)"
                }
              },
              [_vm._v("ﭪ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER VEH FINAL FORM' (U+FB6B)"
                }
              },
              [_vm._v("ﭫ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER VEH INITIAL FORM' (U+FB6C)"
                }
              },
              [_vm._v("ﭬ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER VEH MEDIAL FORM' (U+FB6D)"
                }
              },
              [_vm._v("ﭭ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER PEHEH ISOLATED FORM' (U+FB6E)"
                }
              },
              [_vm._v("ﭮ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER PEHEH FINAL FORM' (U+FB6F)"
                }
              },
              [_vm._v("ﭯ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfb70")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER PEHEH INITIAL FORM' (U+FB70)"
                }
              },
              [_vm._v("ﭰ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER PEHEH MEDIAL FORM' (U+FB71)"
                }
              },
              [_vm._v("ﭱ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER DYEH ISOLATED FORM' (U+FB72)"
                }
              },
              [_vm._v("ﭲ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER DYEH FINAL FORM' (U+FB73)"
                }
              },
              [_vm._v("ﭳ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER DYEH INITIAL FORM' (U+FB74)"
                }
              },
              [_vm._v("ﭴ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER DYEH MEDIAL FORM' (U+FB75)"
                }
              },
              [_vm._v("ﭵ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER NYEH ISOLATED FORM' (U+FB76)"
                }
              },
              [_vm._v("ﭶ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER NYEH FINAL FORM' (U+FB77)"
                }
              },
              [_vm._v("ﭷ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER NYEH INITIAL FORM' (U+FB78)"
                }
              },
              [_vm._v("ﭸ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER NYEH MEDIAL FORM' (U+FB79)"
                }
              },
              [_vm._v("ﭹ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER TCHEH ISOLATED FORM' (U+FB7A)"
                }
              },
              [_vm._v("ﭺ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER TCHEH FINAL FORM' (U+FB7B)"
                }
              },
              [_vm._v("ﭻ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER TCHEH INITIAL FORM' (U+FB7C)"
                }
              },
              [_vm._v("ﭼ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER TCHEH MEDIAL FORM' (U+FB7D)"
                }
              },
              [_vm._v("ﭽ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER TCHEHEH ISOLATED FORM' (U+FB7E)"
                }
              },
              [_vm._v("ﭾ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER TCHEHEH FINAL FORM' (U+FB7F)"
                }
              },
              [_vm._v("ﭿ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfb80")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER TCHEHEH INITIAL FORM' (U+FB80)"
                }
              },
              [_vm._v("ﮀ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER TCHEHEH MEDIAL FORM' (U+FB81)"
                }
              },
              [_vm._v("ﮁ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER DDAHAL ISOLATED FORM' (U+FB82)"
                }
              },
              [_vm._v("ﮂ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER DDAHAL FINAL FORM' (U+FB83)"
                }
              },
              [_vm._v("ﮃ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER DAHAL ISOLATED FORM' (U+FB84)"
                }
              },
              [_vm._v("ﮄ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER DAHAL FINAL FORM' (U+FB85)"
                }
              },
              [_vm._v("ﮅ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER DUL ISOLATED FORM' (U+FB86)"
                }
              },
              [_vm._v("ﮆ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER DUL FINAL FORM' (U+FB87)"
                }
              },
              [_vm._v("ﮇ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER DDAL ISOLATED FORM' (U+FB88)"
                }
              },
              [_vm._v("ﮈ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER DDAL FINAL FORM' (U+FB89)"
                }
              },
              [_vm._v("ﮉ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER JEH ISOLATED FORM' (U+FB8A)"
                }
              },
              [_vm._v("ﮊ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER JEH FINAL FORM' (U+FB8B)"
                }
              },
              [_vm._v("ﮋ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER RREH ISOLATED FORM' (U+FB8C)"
                }
              },
              [_vm._v("ﮌ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER RREH FINAL FORM' (U+FB8D)"
                }
              },
              [_vm._v("ﮍ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER KEHEH ISOLATED FORM' (U+FB8E)"
                }
              },
              [_vm._v("ﮎ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER KEHEH FINAL FORM' (U+FB8F)"
                }
              },
              [_vm._v("ﮏ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfb90")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER KEHEH INITIAL FORM' (U+FB90)"
                }
              },
              [_vm._v("ﮐ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER KEHEH MEDIAL FORM' (U+FB91)"
                }
              },
              [_vm._v("ﮑ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER GAF ISOLATED FORM' (U+FB92)"
                }
              },
              [_vm._v("ﮒ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER GAF FINAL FORM' (U+FB93)"
                }
              },
              [_vm._v("ﮓ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER GAF INITIAL FORM' (U+FB94)"
                }
              },
              [_vm._v("ﮔ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER GAF MEDIAL FORM' (U+FB95)"
                }
              },
              [_vm._v("ﮕ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER GUEH ISOLATED FORM' (U+FB96)"
                }
              },
              [_vm._v("ﮖ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER GUEH FINAL FORM' (U+FB97)"
                }
              },
              [_vm._v("ﮗ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER GUEH INITIAL FORM' (U+FB98)"
                }
              },
              [_vm._v("ﮘ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER GUEH MEDIAL FORM' (U+FB99)"
                }
              },
              [_vm._v("ﮙ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER NGOEH ISOLATED FORM' (U+FB9A)"
                }
              },
              [_vm._v("ﮚ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER NGOEH FINAL FORM' (U+FB9B)"
                }
              },
              [_vm._v("ﮛ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER NGOEH INITIAL FORM' (U+FB9C)"
                }
              },
              [_vm._v("ﮜ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER NGOEH MEDIAL FORM' (U+FB9D)"
                }
              },
              [_vm._v("ﮝ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER NOON GHUNNA ISOLATED FORM' (U+FB9E)"
                }
              },
              [_vm._v("ﮞ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER NOON GHUNNA FINAL FORM' (U+FB9F)"
                }
              },
              [_vm._v("ﮟ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfba0")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER RNOON ISOLATED FORM' (U+FBA0)"
                }
              },
              [_vm._v("ﮠ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER RNOON FINAL FORM' (U+FBA1)"
                }
              },
              [_vm._v("ﮡ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER RNOON INITIAL FORM' (U+FBA2)"
                }
              },
              [_vm._v("ﮢ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER RNOON MEDIAL FORM' (U+FBA3)"
                }
              },
              [_vm._v("ﮣ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER HEH WITH YEH ABOVE ISOLATED FORM' (U+FBA4)"
                }
              },
              [_vm._v("ﮤ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER HEH WITH YEH ABOVE FINAL FORM' (U+FBA5)"
                }
              },
              [_vm._v("ﮥ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER HEH GOAL ISOLATED FORM' (U+FBA6)"
                }
              },
              [_vm._v("ﮦ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER HEH GOAL FINAL FORM' (U+FBA7)"
                }
              },
              [_vm._v("ﮧ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER HEH GOAL INITIAL FORM' (U+FBA8)"
                }
              },
              [_vm._v("ﮨ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER HEH GOAL MEDIAL FORM' (U+FBA9)"
                }
              },
              [_vm._v("ﮩ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER HEH DOACHASHMEE ISOLATED FORM' (U+FBAA)"
                }
              },
              [_vm._v("ﮪ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER HEH DOACHASHMEE FINAL FORM' (U+FBAB)"
                }
              },
              [_vm._v("ﮫ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER HEH DOACHASHMEE INITIAL FORM' (U+FBAC)"
                }
              },
              [_vm._v("ﮬ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER HEH DOACHASHMEE MEDIAL FORM' (U+FBAD)"
                }
              },
              [_vm._v("ﮭ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER YEH BARREE ISOLATED FORM' (U+FBAE)"
                }
              },
              [_vm._v("ﮮ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER YEH BARREE FINAL FORM' (U+FBAF)"
                }
              },
              [_vm._v("ﮯ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfbb0")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER YEH BARREE WITH HAMZA ABOVE ISOLATED FORM' (U+FBB0)"
                }
              },
              [_vm._v("ﮰ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER YEH BARREE WITH HAMZA ABOVE FINAL FORM' (U+FBB1)"
                }
              },
              [_vm._v("ﮱ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC SYMBOL DOT ABOVE' (U+FBB2)"
                }
              },
              [_vm._v("﮲")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC SYMBOL DOT BELOW' (U+FBB3)"
                }
              },
              [_vm._v("﮳")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC SYMBOL TWO DOTS ABOVE' (U+FBB4)"
                }
              },
              [_vm._v("﮴")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC SYMBOL TWO DOTS BELOW' (U+FBB5)"
                }
              },
              [_vm._v("﮵")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC SYMBOL THREE DOTS ABOVE' (U+FBB6)"
                }
              },
              [_vm._v("﮶")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC SYMBOL THREE DOTS BELOW' (U+FBB7)"
                }
              },
              [_vm._v("﮷")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC SYMBOL THREE DOTS POINTING DOWNWARDS ABOVE' (U+FBB8)"
                }
              },
              [_vm._v("﮸")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC SYMBOL THREE DOTS POINTING DOWNWARDS BELOW' (U+FBB9)"
                }
              },
              [_vm._v("﮹")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC SYMBOL FOUR DOTS ABOVE' (U+FBBA)"
                }
              },
              [_vm._v("﮺")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC SYMBOL FOUR DOTS BELOW' (U+FBBB)"
                }
              },
              [_vm._v("﮻")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC SYMBOL DOUBLE VERTICAL BAR BELOW' (U+FBBC)"
                }
              },
              [_vm._v("﮼")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC SYMBOL TWO DOTS VERTICALLY ABOVE' (U+FBBD)"
                }
              },
              [_vm._v("﮽")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC SYMBOL TWO DOTS VERTICALLY BELOW' (U+FBBE)"
                }
              },
              [_vm._v("﮾")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC SYMBOL RING' (U+FBBF)"
                }
              },
              [_vm._v("﮿")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfbc0")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC SYMBOL SMALL TAH ABOVE' (U+FBC0)"
                }
              },
              [_vm._v("﯀")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC SYMBOL SMALL TAH BELOW' (U+FBC1)"
                }
              },
              [_vm._v("﯁")]
            ),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FBC2" } }, [_vm._v("﯂")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FBC3" } }, [_vm._v("﯃")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FBC4" } }, [_vm._v("﯄")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FBC5" } }, [_vm._v("﯅")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FBC6" } }, [_vm._v("﯆")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FBC7" } }, [_vm._v("﯇")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FBC8" } }, [_vm._v("﯈")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FBC9" } }, [_vm._v("﯉")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FBCA" } }, [_vm._v("﯊")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FBCB" } }, [_vm._v("﯋")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FBCC" } }, [_vm._v("﯌")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FBCD" } }, [_vm._v("﯍")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FBCE" } }, [_vm._v("﯎")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FBCF" } }, [_vm._v("﯏")])
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfbd0")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FBD0" } }, [_vm._v("﯐")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FBD1" } }, [_vm._v("﯑")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FBD2" } }, [_vm._v("﯒")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER NG ISOLATED FORM' (U+FBD3)"
                }
              },
              [_vm._v("ﯓ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER NG FINAL FORM' (U+FBD4)"
                }
              },
              [_vm._v("ﯔ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER NG INITIAL FORM' (U+FBD5)"
                }
              },
              [_vm._v("ﯕ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER NG MEDIAL FORM' (U+FBD6)"
                }
              },
              [_vm._v("ﯖ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER U ISOLATED FORM' (U+FBD7)"
                }
              },
              [_vm._v("ﯗ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER U FINAL FORM' (U+FBD8)"
                }
              },
              [_vm._v("ﯘ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER OE ISOLATED FORM' (U+FBD9)"
                }
              },
              [_vm._v("ﯙ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER OE FINAL FORM' (U+FBDA)"
                }
              },
              [_vm._v("ﯚ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER YU ISOLATED FORM' (U+FBDB)"
                }
              },
              [_vm._v("ﯛ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER YU FINAL FORM' (U+FBDC)"
                }
              },
              [_vm._v("ﯜ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER U WITH HAMZA ABOVE ISOLATED FORM' (U+FBDD)"
                }
              },
              [_vm._v("ﯝ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER VE ISOLATED FORM' (U+FBDE)"
                }
              },
              [_vm._v("ﯞ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER VE FINAL FORM' (U+FBDF)"
                }
              },
              [_vm._v("ﯟ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfbe0")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER KIRGHIZ OE ISOLATED FORM' (U+FBE0)"
                }
              },
              [_vm._v("ﯠ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER KIRGHIZ OE FINAL FORM' (U+FBE1)"
                }
              },
              [_vm._v("ﯡ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER KIRGHIZ YU ISOLATED FORM' (U+FBE2)"
                }
              },
              [_vm._v("ﯢ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER KIRGHIZ YU FINAL FORM' (U+FBE3)"
                }
              },
              [_vm._v("ﯣ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER E ISOLATED FORM' (U+FBE4)"
                }
              },
              [_vm._v("ﯤ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER E FINAL FORM' (U+FBE5)"
                }
              },
              [_vm._v("ﯥ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER E INITIAL FORM' (U+FBE6)"
                }
              },
              [_vm._v("ﯦ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER E MEDIAL FORM' (U+FBE7)"
                }
              },
              [_vm._v("ﯧ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER UIGHUR KAZAKH KIRGHIZ ALEF MAKSURA INITIAL FORM' (U+FBE8)"
                }
              },
              [_vm._v("ﯨ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER UIGHUR KAZAKH KIRGHIZ ALEF MAKSURA MEDIAL FORM' (U+FBE9)"
                }
              },
              [_vm._v("ﯩ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH ALEF ISOLATED FORM' (U+FBEA)"
                }
              },
              [_vm._v("ﯪ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH ALEF FINAL FORM' (U+FBEB)"
                }
              },
              [_vm._v("ﯫ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH AE ISOLATED FORM' (U+FBEC)"
                }
              },
              [_vm._v("ﯬ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH AE FINAL FORM' (U+FBED)"
                }
              },
              [_vm._v("ﯭ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH WAW ISOLATED FORM' (U+FBEE)"
                }
              },
              [_vm._v("ﯮ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH WAW FINAL FORM' (U+FBEF)"
                }
              },
              [_vm._v("ﯯ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfbf0")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH U ISOLATED FORM' (U+FBF0)"
                }
              },
              [_vm._v("ﯰ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH U FINAL FORM' (U+FBF1)"
                }
              },
              [_vm._v("ﯱ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH OE ISOLATED FORM' (U+FBF2)"
                }
              },
              [_vm._v("ﯲ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH OE FINAL FORM' (U+FBF3)"
                }
              },
              [_vm._v("ﯳ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH YU ISOLATED FORM' (U+FBF4)"
                }
              },
              [_vm._v("ﯴ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH YU FINAL FORM' (U+FBF5)"
                }
              },
              [_vm._v("ﯵ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH E ISOLATED FORM' (U+FBF6)"
                }
              },
              [_vm._v("ﯶ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH E FINAL FORM' (U+FBF7)"
                }
              },
              [_vm._v("ﯷ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH E INITIAL FORM' (U+FBF8)"
                }
              },
              [_vm._v("ﯸ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE UIGHUR KIRGHIZ YEH WITH HAMZA ABOVE WITH ALEF MAKSURA ISOLATED FORM' (U+FBF9)"
                }
              },
              [_vm._v("ﯹ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE UIGHUR KIRGHIZ YEH WITH HAMZA ABOVE WITH ALEF MAKSURA FINAL FORM' (U+FBFA)"
                }
              },
              [_vm._v("ﯺ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE UIGHUR KIRGHIZ YEH WITH HAMZA ABOVE WITH ALEF MAKSURA INITIAL FORM' (U+FBFB)"
                }
              },
              [_vm._v("ﯻ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER FARSI YEH ISOLATED FORM' (U+FBFC)"
                }
              },
              [_vm._v("ﯼ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER FARSI YEH FINAL FORM' (U+FBFD)"
                }
              },
              [_vm._v("ﯽ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER FARSI YEH INITIAL FORM' (U+FBFE)"
                }
              },
              [_vm._v("ﯾ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER FARSI YEH MEDIAL FORM' (U+FBFF)"
                }
              },
              [_vm._v("ﯿ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfc00")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH JEEM ISOLATED FORM' (U+FC00)"
                }
              },
              [_vm._v("ﰀ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH HAH ISOLATED FORM' (U+FC01)"
                }
              },
              [_vm._v("ﰁ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH MEEM ISOLATED FORM' (U+FC02)"
                }
              },
              [_vm._v("ﰂ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH ALEF MAKSURA ISOLATED FORM' (U+FC03)"
                }
              },
              [_vm._v("ﰃ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH YEH ISOLATED FORM' (U+FC04)"
                }
              },
              [_vm._v("ﰄ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE BEH WITH JEEM ISOLATED FORM' (U+FC05)"
                }
              },
              [_vm._v("ﰅ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE BEH WITH HAH ISOLATED FORM' (U+FC06)"
                }
              },
              [_vm._v("ﰆ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE BEH WITH KHAH ISOLATED FORM' (U+FC07)"
                }
              },
              [_vm._v("ﰇ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE BEH WITH MEEM ISOLATED FORM' (U+FC08)"
                }
              },
              [_vm._v("ﰈ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE BEH WITH ALEF MAKSURA ISOLATED FORM' (U+FC09)"
                }
              },
              [_vm._v("ﰉ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE BEH WITH YEH ISOLATED FORM' (U+FC0A)"
                }
              },
              [_vm._v("ﰊ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TEH WITH JEEM ISOLATED FORM' (U+FC0B)"
                }
              },
              [_vm._v("ﰋ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TEH WITH HAH ISOLATED FORM' (U+FC0C)"
                }
              },
              [_vm._v("ﰌ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TEH WITH KHAH ISOLATED FORM' (U+FC0D)"
                }
              },
              [_vm._v("ﰍ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TEH WITH MEEM ISOLATED FORM' (U+FC0E)"
                }
              },
              [_vm._v("ﰎ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TEH WITH ALEF MAKSURA ISOLATED FORM' (U+FC0F)"
                }
              },
              [_vm._v("ﰏ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfc10")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TEH WITH YEH ISOLATED FORM' (U+FC10)"
                }
              },
              [_vm._v("ﰐ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE THEH WITH JEEM ISOLATED FORM' (U+FC11)"
                }
              },
              [_vm._v("ﰑ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE THEH WITH MEEM ISOLATED FORM' (U+FC12)"
                }
              },
              [_vm._v("ﰒ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE THEH WITH ALEF MAKSURA ISOLATED FORM' (U+FC13)"
                }
              },
              [_vm._v("ﰓ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE THEH WITH YEH ISOLATED FORM' (U+FC14)"
                }
              },
              [_vm._v("ﰔ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE JEEM WITH HAH ISOLATED FORM' (U+FC15)"
                }
              },
              [_vm._v("ﰕ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE JEEM WITH MEEM ISOLATED FORM' (U+FC16)"
                }
              },
              [_vm._v("ﰖ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE HAH WITH JEEM ISOLATED FORM' (U+FC17)"
                }
              },
              [_vm._v("ﰗ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE HAH WITH MEEM ISOLATED FORM' (U+FC18)"
                }
              },
              [_vm._v("ﰘ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE KHAH WITH JEEM ISOLATED FORM' (U+FC19)"
                }
              },
              [_vm._v("ﰙ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE KHAH WITH HAH ISOLATED FORM' (U+FC1A)"
                }
              },
              [_vm._v("ﰚ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE KHAH WITH MEEM ISOLATED FORM' (U+FC1B)"
                }
              },
              [_vm._v("ﰛ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SEEN WITH JEEM ISOLATED FORM' (U+FC1C)"
                }
              },
              [_vm._v("ﰜ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SEEN WITH HAH ISOLATED FORM' (U+FC1D)"
                }
              },
              [_vm._v("ﰝ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SEEN WITH KHAH ISOLATED FORM' (U+FC1E)"
                }
              },
              [_vm._v("ﰞ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SEEN WITH MEEM ISOLATED FORM' (U+FC1F)"
                }
              },
              [_vm._v("ﰟ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfc20")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SAD WITH HAH ISOLATED FORM' (U+FC20)"
                }
              },
              [_vm._v("ﰠ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SAD WITH MEEM ISOLATED FORM' (U+FC21)"
                }
              },
              [_vm._v("ﰡ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE DAD WITH JEEM ISOLATED FORM' (U+FC22)"
                }
              },
              [_vm._v("ﰢ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE DAD WITH HAH ISOLATED FORM' (U+FC23)"
                }
              },
              [_vm._v("ﰣ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE DAD WITH KHAH ISOLATED FORM' (U+FC24)"
                }
              },
              [_vm._v("ﰤ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE DAD WITH MEEM ISOLATED FORM' (U+FC25)"
                }
              },
              [_vm._v("ﰥ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TAH WITH HAH ISOLATED FORM' (U+FC26)"
                }
              },
              [_vm._v("ﰦ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TAH WITH MEEM ISOLATED FORM' (U+FC27)"
                }
              },
              [_vm._v("ﰧ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE ZAH WITH MEEM ISOLATED FORM' (U+FC28)"
                }
              },
              [_vm._v("ﰨ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE AIN WITH JEEM ISOLATED FORM' (U+FC29)"
                }
              },
              [_vm._v("ﰩ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE AIN WITH MEEM ISOLATED FORM' (U+FC2A)"
                }
              },
              [_vm._v("ﰪ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE GHAIN WITH JEEM ISOLATED FORM' (U+FC2B)"
                }
              },
              [_vm._v("ﰫ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE GHAIN WITH MEEM ISOLATED FORM' (U+FC2C)"
                }
              },
              [_vm._v("ﰬ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE FEH WITH JEEM ISOLATED FORM' (U+FC2D)"
                }
              },
              [_vm._v("ﰭ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE FEH WITH HAH ISOLATED FORM' (U+FC2E)"
                }
              },
              [_vm._v("ﰮ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE FEH WITH KHAH ISOLATED FORM' (U+FC2F)"
                }
              },
              [_vm._v("ﰯ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfc30")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE FEH WITH MEEM ISOLATED FORM' (U+FC30)"
                }
              },
              [_vm._v("ﰰ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE FEH WITH ALEF MAKSURA ISOLATED FORM' (U+FC31)"
                }
              },
              [_vm._v("ﰱ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE FEH WITH YEH ISOLATED FORM' (U+FC32)"
                }
              },
              [_vm._v("ﰲ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE QAF WITH HAH ISOLATED FORM' (U+FC33)"
                }
              },
              [_vm._v("ﰳ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE QAF WITH MEEM ISOLATED FORM' (U+FC34)"
                }
              },
              [_vm._v("ﰴ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE QAF WITH ALEF MAKSURA ISOLATED FORM' (U+FC35)"
                }
              },
              [_vm._v("ﰵ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE QAF WITH YEH ISOLATED FORM' (U+FC36)"
                }
              },
              [_vm._v("ﰶ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE KAF WITH ALEF ISOLATED FORM' (U+FC37)"
                }
              },
              [_vm._v("ﰷ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE KAF WITH JEEM ISOLATED FORM' (U+FC38)"
                }
              },
              [_vm._v("ﰸ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE KAF WITH HAH ISOLATED FORM' (U+FC39)"
                }
              },
              [_vm._v("ﰹ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE KAF WITH KHAH ISOLATED FORM' (U+FC3A)"
                }
              },
              [_vm._v("ﰺ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE KAF WITH LAM ISOLATED FORM' (U+FC3B)"
                }
              },
              [_vm._v("ﰻ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE KAF WITH MEEM ISOLATED FORM' (U+FC3C)"
                }
              },
              [_vm._v("ﰼ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE KAF WITH ALEF MAKSURA ISOLATED FORM' (U+FC3D)"
                }
              },
              [_vm._v("ﰽ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE KAF WITH YEH ISOLATED FORM' (U+FC3E)"
                }
              },
              [_vm._v("ﰾ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE LAM WITH JEEM ISOLATED FORM' (U+FC3F)"
                }
              },
              [_vm._v("ﰿ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfc40")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE LAM WITH HAH ISOLATED FORM' (U+FC40)"
                }
              },
              [_vm._v("ﱀ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE LAM WITH KHAH ISOLATED FORM' (U+FC41)"
                }
              },
              [_vm._v("ﱁ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE LAM WITH MEEM ISOLATED FORM' (U+FC42)"
                }
              },
              [_vm._v("ﱂ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE LAM WITH ALEF MAKSURA ISOLATED FORM' (U+FC43)"
                }
              },
              [_vm._v("ﱃ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE LAM WITH YEH ISOLATED FORM' (U+FC44)"
                }
              },
              [_vm._v("ﱄ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE MEEM WITH JEEM ISOLATED FORM' (U+FC45)"
                }
              },
              [_vm._v("ﱅ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE MEEM WITH HAH ISOLATED FORM' (U+FC46)"
                }
              },
              [_vm._v("ﱆ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE MEEM WITH KHAH ISOLATED FORM' (U+FC47)"
                }
              },
              [_vm._v("ﱇ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE MEEM WITH MEEM ISOLATED FORM' (U+FC48)"
                }
              },
              [_vm._v("ﱈ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE MEEM WITH ALEF MAKSURA ISOLATED FORM' (U+FC49)"
                }
              },
              [_vm._v("ﱉ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE MEEM WITH YEH ISOLATED FORM' (U+FC4A)"
                }
              },
              [_vm._v("ﱊ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE NOON WITH JEEM ISOLATED FORM' (U+FC4B)"
                }
              },
              [_vm._v("ﱋ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE NOON WITH HAH ISOLATED FORM' (U+FC4C)"
                }
              },
              [_vm._v("ﱌ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE NOON WITH KHAH ISOLATED FORM' (U+FC4D)"
                }
              },
              [_vm._v("ﱍ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE NOON WITH MEEM ISOLATED FORM' (U+FC4E)"
                }
              },
              [_vm._v("ﱎ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE NOON WITH ALEF MAKSURA ISOLATED FORM' (U+FC4F)"
                }
              },
              [_vm._v("ﱏ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfc50")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE NOON WITH YEH ISOLATED FORM' (U+FC50)"
                }
              },
              [_vm._v("ﱐ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE HEH WITH JEEM ISOLATED FORM' (U+FC51)"
                }
              },
              [_vm._v("ﱑ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE HEH WITH MEEM ISOLATED FORM' (U+FC52)"
                }
              },
              [_vm._v("ﱒ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE HEH WITH ALEF MAKSURA ISOLATED FORM' (U+FC53)"
                }
              },
              [_vm._v("ﱓ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE HEH WITH YEH ISOLATED FORM' (U+FC54)"
                }
              },
              [_vm._v("ﱔ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH JEEM ISOLATED FORM' (U+FC55)"
                }
              },
              [_vm._v("ﱕ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH HAH ISOLATED FORM' (U+FC56)"
                }
              },
              [_vm._v("ﱖ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH KHAH ISOLATED FORM' (U+FC57)"
                }
              },
              [_vm._v("ﱗ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH MEEM ISOLATED FORM' (U+FC58)"
                }
              },
              [_vm._v("ﱘ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH ALEF MAKSURA ISOLATED FORM' (U+FC59)"
                }
              },
              [_vm._v("ﱙ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH YEH ISOLATED FORM' (U+FC5A)"
                }
              },
              [_vm._v("ﱚ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE THAL WITH SUPERSCRIPT ALEF ISOLATED FORM' (U+FC5B)"
                }
              },
              [_vm._v("ﱛ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE REH WITH SUPERSCRIPT ALEF ISOLATED FORM' (U+FC5C)"
                }
              },
              [_vm._v("ﱜ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE ALEF MAKSURA WITH SUPERSCRIPT ALEF ISOLATED FORM' (U+FC5D)"
                }
              },
              [_vm._v("ﱝ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SHADDA WITH DAMMATAN ISOLATED FORM' (U+FC5E)"
                }
              },
              [_vm._v("ﱞ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SHADDA WITH KASRATAN ISOLATED FORM' (U+FC5F)"
                }
              },
              [_vm._v("ﱟ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfc60")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SHADDA WITH FATHA ISOLATED FORM' (U+FC60)"
                }
              },
              [_vm._v("ﱠ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SHADDA WITH DAMMA ISOLATED FORM' (U+FC61)"
                }
              },
              [_vm._v("ﱡ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SHADDA WITH KASRA ISOLATED FORM' (U+FC62)"
                }
              },
              [_vm._v("ﱢ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SHADDA WITH SUPERSCRIPT ALEF ISOLATED FORM' (U+FC63)"
                }
              },
              [_vm._v("ﱣ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH REH FINAL FORM' (U+FC64)"
                }
              },
              [_vm._v("ﱤ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH ZAIN FINAL FORM' (U+FC65)"
                }
              },
              [_vm._v("ﱥ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH MEEM FINAL FORM' (U+FC66)"
                }
              },
              [_vm._v("ﱦ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH NOON FINAL FORM' (U+FC67)"
                }
              },
              [_vm._v("ﱧ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH ALEF MAKSURA FINAL FORM' (U+FC68)"
                }
              },
              [_vm._v("ﱨ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH YEH FINAL FORM' (U+FC69)"
                }
              },
              [_vm._v("ﱩ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE BEH WITH REH FINAL FORM' (U+FC6A)"
                }
              },
              [_vm._v("ﱪ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE BEH WITH ZAIN FINAL FORM' (U+FC6B)"
                }
              },
              [_vm._v("ﱫ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE BEH WITH MEEM FINAL FORM' (U+FC6C)"
                }
              },
              [_vm._v("ﱬ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE BEH WITH NOON FINAL FORM' (U+FC6D)"
                }
              },
              [_vm._v("ﱭ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE BEH WITH ALEF MAKSURA FINAL FORM' (U+FC6E)"
                }
              },
              [_vm._v("ﱮ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE BEH WITH YEH FINAL FORM' (U+FC6F)"
                }
              },
              [_vm._v("ﱯ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfc70")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TEH WITH REH FINAL FORM' (U+FC70)"
                }
              },
              [_vm._v("ﱰ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TEH WITH ZAIN FINAL FORM' (U+FC71)"
                }
              },
              [_vm._v("ﱱ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TEH WITH MEEM FINAL FORM' (U+FC72)"
                }
              },
              [_vm._v("ﱲ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TEH WITH NOON FINAL FORM' (U+FC73)"
                }
              },
              [_vm._v("ﱳ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TEH WITH ALEF MAKSURA FINAL FORM' (U+FC74)"
                }
              },
              [_vm._v("ﱴ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TEH WITH YEH FINAL FORM' (U+FC75)"
                }
              },
              [_vm._v("ﱵ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE THEH WITH REH FINAL FORM' (U+FC76)"
                }
              },
              [_vm._v("ﱶ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE THEH WITH ZAIN FINAL FORM' (U+FC77)"
                }
              },
              [_vm._v("ﱷ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE THEH WITH MEEM FINAL FORM' (U+FC78)"
                }
              },
              [_vm._v("ﱸ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE THEH WITH NOON FINAL FORM' (U+FC79)"
                }
              },
              [_vm._v("ﱹ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE THEH WITH ALEF MAKSURA FINAL FORM' (U+FC7A)"
                }
              },
              [_vm._v("ﱺ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE THEH WITH YEH FINAL FORM' (U+FC7B)"
                }
              },
              [_vm._v("ﱻ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE FEH WITH ALEF MAKSURA FINAL FORM' (U+FC7C)"
                }
              },
              [_vm._v("ﱼ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE FEH WITH YEH FINAL FORM' (U+FC7D)"
                }
              },
              [_vm._v("ﱽ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE QAF WITH ALEF MAKSURA FINAL FORM' (U+FC7E)"
                }
              },
              [_vm._v("ﱾ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE QAF WITH YEH FINAL FORM' (U+FC7F)"
                }
              },
              [_vm._v("ﱿ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfc80")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE KAF WITH ALEF FINAL FORM' (U+FC80)"
                }
              },
              [_vm._v("ﲀ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE KAF WITH LAM FINAL FORM' (U+FC81)"
                }
              },
              [_vm._v("ﲁ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE KAF WITH MEEM FINAL FORM' (U+FC82)"
                }
              },
              [_vm._v("ﲂ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE KAF WITH ALEF MAKSURA FINAL FORM' (U+FC83)"
                }
              },
              [_vm._v("ﲃ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE KAF WITH YEH FINAL FORM' (U+FC84)"
                }
              },
              [_vm._v("ﲄ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE LAM WITH MEEM FINAL FORM' (U+FC85)"
                }
              },
              [_vm._v("ﲅ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE LAM WITH ALEF MAKSURA FINAL FORM' (U+FC86)"
                }
              },
              [_vm._v("ﲆ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE LAM WITH YEH FINAL FORM' (U+FC87)"
                }
              },
              [_vm._v("ﲇ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE MEEM WITH ALEF FINAL FORM' (U+FC88)"
                }
              },
              [_vm._v("ﲈ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE MEEM WITH MEEM FINAL FORM' (U+FC89)"
                }
              },
              [_vm._v("ﲉ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE NOON WITH REH FINAL FORM' (U+FC8A)"
                }
              },
              [_vm._v("ﲊ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE NOON WITH ZAIN FINAL FORM' (U+FC8B)"
                }
              },
              [_vm._v("ﲋ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE NOON WITH MEEM FINAL FORM' (U+FC8C)"
                }
              },
              [_vm._v("ﲌ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE NOON WITH NOON FINAL FORM' (U+FC8D)"
                }
              },
              [_vm._v("ﲍ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE NOON WITH ALEF MAKSURA FINAL FORM' (U+FC8E)"
                }
              },
              [_vm._v("ﲎ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE NOON WITH YEH FINAL FORM' (U+FC8F)"
                }
              },
              [_vm._v("ﲏ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfc90")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE ALEF MAKSURA WITH SUPERSCRIPT ALEF FINAL FORM' (U+FC90)"
                }
              },
              [_vm._v("ﲐ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH REH FINAL FORM' (U+FC91)"
                }
              },
              [_vm._v("ﲑ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH ZAIN FINAL FORM' (U+FC92)"
                }
              },
              [_vm._v("ﲒ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH MEEM FINAL FORM' (U+FC93)"
                }
              },
              [_vm._v("ﲓ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH NOON FINAL FORM' (U+FC94)"
                }
              },
              [_vm._v("ﲔ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH ALEF MAKSURA FINAL FORM' (U+FC95)"
                }
              },
              [_vm._v("ﲕ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH YEH FINAL FORM' (U+FC96)"
                }
              },
              [_vm._v("ﲖ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH JEEM INITIAL FORM' (U+FC97)"
                }
              },
              [_vm._v("ﲗ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH HAH INITIAL FORM' (U+FC98)"
                }
              },
              [_vm._v("ﲘ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH KHAH INITIAL FORM' (U+FC99)"
                }
              },
              [_vm._v("ﲙ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH MEEM INITIAL FORM' (U+FC9A)"
                }
              },
              [_vm._v("ﲚ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH HEH INITIAL FORM' (U+FC9B)"
                }
              },
              [_vm._v("ﲛ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE BEH WITH JEEM INITIAL FORM' (U+FC9C)"
                }
              },
              [_vm._v("ﲜ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE BEH WITH HAH INITIAL FORM' (U+FC9D)"
                }
              },
              [_vm._v("ﲝ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE BEH WITH KHAH INITIAL FORM' (U+FC9E)"
                }
              },
              [_vm._v("ﲞ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE BEH WITH MEEM INITIAL FORM' (U+FC9F)"
                }
              },
              [_vm._v("ﲟ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfca0")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE BEH WITH HEH INITIAL FORM' (U+FCA0)"
                }
              },
              [_vm._v("ﲠ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TEH WITH JEEM INITIAL FORM' (U+FCA1)"
                }
              },
              [_vm._v("ﲡ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TEH WITH HAH INITIAL FORM' (U+FCA2)"
                }
              },
              [_vm._v("ﲢ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TEH WITH KHAH INITIAL FORM' (U+FCA3)"
                }
              },
              [_vm._v("ﲣ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TEH WITH MEEM INITIAL FORM' (U+FCA4)"
                }
              },
              [_vm._v("ﲤ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TEH WITH HEH INITIAL FORM' (U+FCA5)"
                }
              },
              [_vm._v("ﲥ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE THEH WITH MEEM INITIAL FORM' (U+FCA6)"
                }
              },
              [_vm._v("ﲦ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE JEEM WITH HAH INITIAL FORM' (U+FCA7)"
                }
              },
              [_vm._v("ﲧ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE JEEM WITH MEEM INITIAL FORM' (U+FCA8)"
                }
              },
              [_vm._v("ﲨ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE HAH WITH JEEM INITIAL FORM' (U+FCA9)"
                }
              },
              [_vm._v("ﲩ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE HAH WITH MEEM INITIAL FORM' (U+FCAA)"
                }
              },
              [_vm._v("ﲪ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE KHAH WITH JEEM INITIAL FORM' (U+FCAB)"
                }
              },
              [_vm._v("ﲫ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE KHAH WITH MEEM INITIAL FORM' (U+FCAC)"
                }
              },
              [_vm._v("ﲬ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SEEN WITH JEEM INITIAL FORM' (U+FCAD)"
                }
              },
              [_vm._v("ﲭ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SEEN WITH HAH INITIAL FORM' (U+FCAE)"
                }
              },
              [_vm._v("ﲮ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SEEN WITH KHAH INITIAL FORM' (U+FCAF)"
                }
              },
              [_vm._v("ﲯ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfcb0")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SEEN WITH MEEM INITIAL FORM' (U+FCB0)"
                }
              },
              [_vm._v("ﲰ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SAD WITH HAH INITIAL FORM' (U+FCB1)"
                }
              },
              [_vm._v("ﲱ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SAD WITH KHAH INITIAL FORM' (U+FCB2)"
                }
              },
              [_vm._v("ﲲ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SAD WITH MEEM INITIAL FORM' (U+FCB3)"
                }
              },
              [_vm._v("ﲳ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE DAD WITH JEEM INITIAL FORM' (U+FCB4)"
                }
              },
              [_vm._v("ﲴ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE DAD WITH HAH INITIAL FORM' (U+FCB5)"
                }
              },
              [_vm._v("ﲵ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE DAD WITH KHAH INITIAL FORM' (U+FCB6)"
                }
              },
              [_vm._v("ﲶ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE DAD WITH MEEM INITIAL FORM' (U+FCB7)"
                }
              },
              [_vm._v("ﲷ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TAH WITH HAH INITIAL FORM' (U+FCB8)"
                }
              },
              [_vm._v("ﲸ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE ZAH WITH MEEM INITIAL FORM' (U+FCB9)"
                }
              },
              [_vm._v("ﲹ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE AIN WITH JEEM INITIAL FORM' (U+FCBA)"
                }
              },
              [_vm._v("ﲺ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE AIN WITH MEEM INITIAL FORM' (U+FCBB)"
                }
              },
              [_vm._v("ﲻ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE GHAIN WITH JEEM INITIAL FORM' (U+FCBC)"
                }
              },
              [_vm._v("ﲼ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE GHAIN WITH MEEM INITIAL FORM' (U+FCBD)"
                }
              },
              [_vm._v("ﲽ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE FEH WITH JEEM INITIAL FORM' (U+FCBE)"
                }
              },
              [_vm._v("ﲾ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE FEH WITH HAH INITIAL FORM' (U+FCBF)"
                }
              },
              [_vm._v("ﲿ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfcc0")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE FEH WITH KHAH INITIAL FORM' (U+FCC0)"
                }
              },
              [_vm._v("ﳀ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE FEH WITH MEEM INITIAL FORM' (U+FCC1)"
                }
              },
              [_vm._v("ﳁ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE QAF WITH HAH INITIAL FORM' (U+FCC2)"
                }
              },
              [_vm._v("ﳂ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE QAF WITH MEEM INITIAL FORM' (U+FCC3)"
                }
              },
              [_vm._v("ﳃ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE KAF WITH JEEM INITIAL FORM' (U+FCC4)"
                }
              },
              [_vm._v("ﳄ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE KAF WITH HAH INITIAL FORM' (U+FCC5)"
                }
              },
              [_vm._v("ﳅ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE KAF WITH KHAH INITIAL FORM' (U+FCC6)"
                }
              },
              [_vm._v("ﳆ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE KAF WITH LAM INITIAL FORM' (U+FCC7)"
                }
              },
              [_vm._v("ﳇ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE KAF WITH MEEM INITIAL FORM' (U+FCC8)"
                }
              },
              [_vm._v("ﳈ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE LAM WITH JEEM INITIAL FORM' (U+FCC9)"
                }
              },
              [_vm._v("ﳉ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE LAM WITH HAH INITIAL FORM' (U+FCCA)"
                }
              },
              [_vm._v("ﳊ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE LAM WITH KHAH INITIAL FORM' (U+FCCB)"
                }
              },
              [_vm._v("ﳋ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE LAM WITH MEEM INITIAL FORM' (U+FCCC)"
                }
              },
              [_vm._v("ﳌ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE LAM WITH HEH INITIAL FORM' (U+FCCD)"
                }
              },
              [_vm._v("ﳍ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE MEEM WITH JEEM INITIAL FORM' (U+FCCE)"
                }
              },
              [_vm._v("ﳎ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE MEEM WITH HAH INITIAL FORM' (U+FCCF)"
                }
              },
              [_vm._v("ﳏ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfcd0")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE MEEM WITH KHAH INITIAL FORM' (U+FCD0)"
                }
              },
              [_vm._v("ﳐ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE MEEM WITH MEEM INITIAL FORM' (U+FCD1)"
                }
              },
              [_vm._v("ﳑ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE NOON WITH JEEM INITIAL FORM' (U+FCD2)"
                }
              },
              [_vm._v("ﳒ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE NOON WITH HAH INITIAL FORM' (U+FCD3)"
                }
              },
              [_vm._v("ﳓ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE NOON WITH KHAH INITIAL FORM' (U+FCD4)"
                }
              },
              [_vm._v("ﳔ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE NOON WITH MEEM INITIAL FORM' (U+FCD5)"
                }
              },
              [_vm._v("ﳕ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE NOON WITH HEH INITIAL FORM' (U+FCD6)"
                }
              },
              [_vm._v("ﳖ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE HEH WITH JEEM INITIAL FORM' (U+FCD7)"
                }
              },
              [_vm._v("ﳗ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE HEH WITH MEEM INITIAL FORM' (U+FCD8)"
                }
              },
              [_vm._v("ﳘ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE HEH WITH SUPERSCRIPT ALEF INITIAL FORM' (U+FCD9)"
                }
              },
              [_vm._v("ﳙ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH JEEM INITIAL FORM' (U+FCDA)"
                }
              },
              [_vm._v("ﳚ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH HAH INITIAL FORM' (U+FCDB)"
                }
              },
              [_vm._v("ﳛ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH KHAH INITIAL FORM' (U+FCDC)"
                }
              },
              [_vm._v("ﳜ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH MEEM INITIAL FORM' (U+FCDD)"
                }
              },
              [_vm._v("ﳝ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH HEH INITIAL FORM' (U+FCDE)"
                }
              },
              [_vm._v("ﳞ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH MEEM MEDIAL FORM' (U+FCDF)"
                }
              },
              [_vm._v("ﳟ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfce0")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH HAMZA ABOVE WITH HEH MEDIAL FORM' (U+FCE0)"
                }
              },
              [_vm._v("ﳠ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE BEH WITH MEEM MEDIAL FORM' (U+FCE1)"
                }
              },
              [_vm._v("ﳡ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE BEH WITH HEH MEDIAL FORM' (U+FCE2)"
                }
              },
              [_vm._v("ﳢ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TEH WITH MEEM MEDIAL FORM' (U+FCE3)"
                }
              },
              [_vm._v("ﳣ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TEH WITH HEH MEDIAL FORM' (U+FCE4)"
                }
              },
              [_vm._v("ﳤ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE THEH WITH MEEM MEDIAL FORM' (U+FCE5)"
                }
              },
              [_vm._v("ﳥ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE THEH WITH HEH MEDIAL FORM' (U+FCE6)"
                }
              },
              [_vm._v("ﳦ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SEEN WITH MEEM MEDIAL FORM' (U+FCE7)"
                }
              },
              [_vm._v("ﳧ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SEEN WITH HEH MEDIAL FORM' (U+FCE8)"
                }
              },
              [_vm._v("ﳨ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SHEEN WITH MEEM MEDIAL FORM' (U+FCE9)"
                }
              },
              [_vm._v("ﳩ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SHEEN WITH HEH MEDIAL FORM' (U+FCEA)"
                }
              },
              [_vm._v("ﳪ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE KAF WITH LAM MEDIAL FORM' (U+FCEB)"
                }
              },
              [_vm._v("ﳫ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE KAF WITH MEEM MEDIAL FORM' (U+FCEC)"
                }
              },
              [_vm._v("ﳬ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE LAM WITH MEEM MEDIAL FORM' (U+FCED)"
                }
              },
              [_vm._v("ﳭ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE NOON WITH MEEM MEDIAL FORM' (U+FCEE)"
                }
              },
              [_vm._v("ﳮ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE NOON WITH HEH MEDIAL FORM' (U+FCEF)"
                }
              },
              [_vm._v("ﳯ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfcf0")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH MEEM MEDIAL FORM' (U+FCF0)"
                }
              },
              [_vm._v("ﳰ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH HEH MEDIAL FORM' (U+FCF1)"
                }
              },
              [_vm._v("ﳱ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SHADDA WITH FATHA MEDIAL FORM' (U+FCF2)"
                }
              },
              [_vm._v("ﳲ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SHADDA WITH DAMMA MEDIAL FORM' (U+FCF3)"
                }
              },
              [_vm._v("ﳳ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SHADDA WITH KASRA MEDIAL FORM' (U+FCF4)"
                }
              },
              [_vm._v("ﳴ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TAH WITH ALEF MAKSURA ISOLATED FORM' (U+FCF5)"
                }
              },
              [_vm._v("ﳵ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TAH WITH YEH ISOLATED FORM' (U+FCF6)"
                }
              },
              [_vm._v("ﳶ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE AIN WITH ALEF MAKSURA ISOLATED FORM' (U+FCF7)"
                }
              },
              [_vm._v("ﳷ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE AIN WITH YEH ISOLATED FORM' (U+FCF8)"
                }
              },
              [_vm._v("ﳸ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE GHAIN WITH ALEF MAKSURA ISOLATED FORM' (U+FCF9)"
                }
              },
              [_vm._v("ﳹ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE GHAIN WITH YEH ISOLATED FORM' (U+FCFA)"
                }
              },
              [_vm._v("ﳺ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SEEN WITH ALEF MAKSURA ISOLATED FORM' (U+FCFB)"
                }
              },
              [_vm._v("ﳻ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SEEN WITH YEH ISOLATED FORM' (U+FCFC)"
                }
              },
              [_vm._v("ﳼ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SHEEN WITH ALEF MAKSURA ISOLATED FORM' (U+FCFD)"
                }
              },
              [_vm._v("ﳽ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SHEEN WITH YEH ISOLATED FORM' (U+FCFE)"
                }
              },
              [_vm._v("ﳾ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE HAH WITH ALEF MAKSURA ISOLATED FORM' (U+FCFF)"
                }
              },
              [_vm._v("ﳿ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfd00")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE HAH WITH YEH ISOLATED FORM' (U+FD00)"
                }
              },
              [_vm._v("ﴀ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE JEEM WITH ALEF MAKSURA ISOLATED FORM' (U+FD01)"
                }
              },
              [_vm._v("ﴁ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE JEEM WITH YEH ISOLATED FORM' (U+FD02)"
                }
              },
              [_vm._v("ﴂ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE KHAH WITH ALEF MAKSURA ISOLATED FORM' (U+FD03)"
                }
              },
              [_vm._v("ﴃ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE KHAH WITH YEH ISOLATED FORM' (U+FD04)"
                }
              },
              [_vm._v("ﴄ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SAD WITH ALEF MAKSURA ISOLATED FORM' (U+FD05)"
                }
              },
              [_vm._v("ﴅ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SAD WITH YEH ISOLATED FORM' (U+FD06)"
                }
              },
              [_vm._v("ﴆ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE DAD WITH ALEF MAKSURA ISOLATED FORM' (U+FD07)"
                }
              },
              [_vm._v("ﴇ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE DAD WITH YEH ISOLATED FORM' (U+FD08)"
                }
              },
              [_vm._v("ﴈ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SHEEN WITH JEEM ISOLATED FORM' (U+FD09)"
                }
              },
              [_vm._v("ﴉ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SHEEN WITH HAH ISOLATED FORM' (U+FD0A)"
                }
              },
              [_vm._v("ﴊ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SHEEN WITH KHAH ISOLATED FORM' (U+FD0B)"
                }
              },
              [_vm._v("ﴋ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SHEEN WITH MEEM ISOLATED FORM' (U+FD0C)"
                }
              },
              [_vm._v("ﴌ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SHEEN WITH REH ISOLATED FORM' (U+FD0D)"
                }
              },
              [_vm._v("ﴍ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SEEN WITH REH ISOLATED FORM' (U+FD0E)"
                }
              },
              [_vm._v("ﴎ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SAD WITH REH ISOLATED FORM' (U+FD0F)"
                }
              },
              [_vm._v("ﴏ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfd10")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE DAD WITH REH ISOLATED FORM' (U+FD10)"
                }
              },
              [_vm._v("ﴐ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TAH WITH ALEF MAKSURA FINAL FORM' (U+FD11)"
                }
              },
              [_vm._v("ﴑ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TAH WITH YEH FINAL FORM' (U+FD12)"
                }
              },
              [_vm._v("ﴒ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE AIN WITH ALEF MAKSURA FINAL FORM' (U+FD13)"
                }
              },
              [_vm._v("ﴓ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE AIN WITH YEH FINAL FORM' (U+FD14)"
                }
              },
              [_vm._v("ﴔ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE GHAIN WITH ALEF MAKSURA FINAL FORM' (U+FD15)"
                }
              },
              [_vm._v("ﴕ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE GHAIN WITH YEH FINAL FORM' (U+FD16)"
                }
              },
              [_vm._v("ﴖ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SEEN WITH ALEF MAKSURA FINAL FORM' (U+FD17)"
                }
              },
              [_vm._v("ﴗ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SEEN WITH YEH FINAL FORM' (U+FD18)"
                }
              },
              [_vm._v("ﴘ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SHEEN WITH ALEF MAKSURA FINAL FORM' (U+FD19)"
                }
              },
              [_vm._v("ﴙ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SHEEN WITH YEH FINAL FORM' (U+FD1A)"
                }
              },
              [_vm._v("ﴚ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE HAH WITH ALEF MAKSURA FINAL FORM' (U+FD1B)"
                }
              },
              [_vm._v("ﴛ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE HAH WITH YEH FINAL FORM' (U+FD1C)"
                }
              },
              [_vm._v("ﴜ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE JEEM WITH ALEF MAKSURA FINAL FORM' (U+FD1D)"
                }
              },
              [_vm._v("ﴝ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE JEEM WITH YEH FINAL FORM' (U+FD1E)"
                }
              },
              [_vm._v("ﴞ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE KHAH WITH ALEF MAKSURA FINAL FORM' (U+FD1F)"
                }
              },
              [_vm._v("ﴟ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfd20")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE KHAH WITH YEH FINAL FORM' (U+FD20)"
                }
              },
              [_vm._v("ﴠ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SAD WITH ALEF MAKSURA FINAL FORM' (U+FD21)"
                }
              },
              [_vm._v("ﴡ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SAD WITH YEH FINAL FORM' (U+FD22)"
                }
              },
              [_vm._v("ﴢ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE DAD WITH ALEF MAKSURA FINAL FORM' (U+FD23)"
                }
              },
              [_vm._v("ﴣ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE DAD WITH YEH FINAL FORM' (U+FD24)"
                }
              },
              [_vm._v("ﴤ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SHEEN WITH JEEM FINAL FORM' (U+FD25)"
                }
              },
              [_vm._v("ﴥ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SHEEN WITH HAH FINAL FORM' (U+FD26)"
                }
              },
              [_vm._v("ﴦ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SHEEN WITH KHAH FINAL FORM' (U+FD27)"
                }
              },
              [_vm._v("ﴧ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SHEEN WITH MEEM FINAL FORM' (U+FD28)"
                }
              },
              [_vm._v("ﴨ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SHEEN WITH REH FINAL FORM' (U+FD29)"
                }
              },
              [_vm._v("ﴩ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SEEN WITH REH FINAL FORM' (U+FD2A)"
                }
              },
              [_vm._v("ﴪ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SAD WITH REH FINAL FORM' (U+FD2B)"
                }
              },
              [_vm._v("ﴫ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE DAD WITH REH FINAL FORM' (U+FD2C)"
                }
              },
              [_vm._v("ﴬ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SHEEN WITH JEEM INITIAL FORM' (U+FD2D)"
                }
              },
              [_vm._v("ﴭ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SHEEN WITH HAH INITIAL FORM' (U+FD2E)"
                }
              },
              [_vm._v("ﴮ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SHEEN WITH KHAH INITIAL FORM' (U+FD2F)"
                }
              },
              [_vm._v("ﴯ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfd30")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SHEEN WITH MEEM INITIAL FORM' (U+FD30)"
                }
              },
              [_vm._v("ﴰ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SEEN WITH HEH INITIAL FORM' (U+FD31)"
                }
              },
              [_vm._v("ﴱ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SHEEN WITH HEH INITIAL FORM' (U+FD32)"
                }
              },
              [_vm._v("ﴲ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TAH WITH MEEM INITIAL FORM' (U+FD33)"
                }
              },
              [_vm._v("ﴳ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SEEN WITH JEEM MEDIAL FORM' (U+FD34)"
                }
              },
              [_vm._v("ﴴ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SEEN WITH HAH MEDIAL FORM' (U+FD35)"
                }
              },
              [_vm._v("ﴵ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SEEN WITH KHAH MEDIAL FORM' (U+FD36)"
                }
              },
              [_vm._v("ﴶ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SHEEN WITH JEEM MEDIAL FORM' (U+FD37)"
                }
              },
              [_vm._v("ﴷ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SHEEN WITH HAH MEDIAL FORM' (U+FD38)"
                }
              },
              [_vm._v("ﴸ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SHEEN WITH KHAH MEDIAL FORM' (U+FD39)"
                }
              },
              [_vm._v("ﴹ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TAH WITH MEEM MEDIAL FORM' (U+FD3A)"
                }
              },
              [_vm._v("ﴺ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE ZAH WITH MEEM MEDIAL FORM' (U+FD3B)"
                }
              },
              [_vm._v("ﴻ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE ALEF WITH FATHATAN FINAL FORM' (U+FD3C)"
                }
              },
              [_vm._v("ﴼ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE ALEF WITH FATHATAN ISOLATED FORM' (U+FD3D)"
                }
              },
              [_vm._v("ﴽ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ORNATE LEFT PARENTHESIS' (U+FD3E)"
                }
              },
              [_vm._v("﴾")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ORNATE RIGHT PARENTHESIS' (U+FD3F)"
                }
              },
              [_vm._v("﴿")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfd40")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FD40" } }, [_vm._v("﵀")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FD41" } }, [_vm._v("﵁")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FD42" } }, [_vm._v("﵂")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FD43" } }, [_vm._v("﵃")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FD44" } }, [_vm._v("﵄")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FD45" } }, [_vm._v("﵅")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FD46" } }, [_vm._v("﵆")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FD47" } }, [_vm._v("﵇")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FD48" } }, [_vm._v("﵈")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FD49" } }, [_vm._v("﵉")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FD4A" } }, [_vm._v("﵊")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FD4B" } }, [_vm._v("﵋")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FD4C" } }, [_vm._v("﵌")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FD4D" } }, [_vm._v("﵍")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FD4E" } }, [_vm._v("﵎")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FD4F" } }, [_vm._v("﵏")])
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfd50")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TEH WITH JEEM WITH MEEM INITIAL FORM' (U+FD50)"
                }
              },
              [_vm._v("ﵐ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TEH WITH HAH WITH JEEM FINAL FORM' (U+FD51)"
                }
              },
              [_vm._v("ﵑ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TEH WITH HAH WITH JEEM INITIAL FORM' (U+FD52)"
                }
              },
              [_vm._v("ﵒ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TEH WITH HAH WITH MEEM INITIAL FORM' (U+FD53)"
                }
              },
              [_vm._v("ﵓ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TEH WITH KHAH WITH MEEM INITIAL FORM' (U+FD54)"
                }
              },
              [_vm._v("ﵔ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TEH WITH MEEM WITH JEEM INITIAL FORM' (U+FD55)"
                }
              },
              [_vm._v("ﵕ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TEH WITH MEEM WITH HAH INITIAL FORM' (U+FD56)"
                }
              },
              [_vm._v("ﵖ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TEH WITH MEEM WITH KHAH INITIAL FORM' (U+FD57)"
                }
              },
              [_vm._v("ﵗ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE JEEM WITH MEEM WITH HAH FINAL FORM' (U+FD58)"
                }
              },
              [_vm._v("ﵘ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE JEEM WITH MEEM WITH HAH INITIAL FORM' (U+FD59)"
                }
              },
              [_vm._v("ﵙ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE HAH WITH MEEM WITH YEH FINAL FORM' (U+FD5A)"
                }
              },
              [_vm._v("ﵚ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE HAH WITH MEEM WITH ALEF MAKSURA FINAL FORM' (U+FD5B)"
                }
              },
              [_vm._v("ﵛ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SEEN WITH HAH WITH JEEM INITIAL FORM' (U+FD5C)"
                }
              },
              [_vm._v("ﵜ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SEEN WITH JEEM WITH HAH INITIAL FORM' (U+FD5D)"
                }
              },
              [_vm._v("ﵝ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SEEN WITH JEEM WITH ALEF MAKSURA FINAL FORM' (U+FD5E)"
                }
              },
              [_vm._v("ﵞ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SEEN WITH MEEM WITH HAH FINAL FORM' (U+FD5F)"
                }
              },
              [_vm._v("ﵟ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfd60")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SEEN WITH MEEM WITH HAH INITIAL FORM' (U+FD60)"
                }
              },
              [_vm._v("ﵠ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SEEN WITH MEEM WITH JEEM INITIAL FORM' (U+FD61)"
                }
              },
              [_vm._v("ﵡ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SEEN WITH MEEM WITH MEEM FINAL FORM' (U+FD62)"
                }
              },
              [_vm._v("ﵢ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SEEN WITH MEEM WITH MEEM INITIAL FORM' (U+FD63)"
                }
              },
              [_vm._v("ﵣ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SAD WITH HAH WITH HAH FINAL FORM' (U+FD64)"
                }
              },
              [_vm._v("ﵤ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SAD WITH HAH WITH HAH INITIAL FORM' (U+FD65)"
                }
              },
              [_vm._v("ﵥ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SAD WITH MEEM WITH MEEM FINAL FORM' (U+FD66)"
                }
              },
              [_vm._v("ﵦ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SHEEN WITH HAH WITH MEEM FINAL FORM' (U+FD67)"
                }
              },
              [_vm._v("ﵧ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SHEEN WITH HAH WITH MEEM INITIAL FORM' (U+FD68)"
                }
              },
              [_vm._v("ﵨ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SHEEN WITH JEEM WITH YEH FINAL FORM' (U+FD69)"
                }
              },
              [_vm._v("ﵩ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SHEEN WITH MEEM WITH KHAH FINAL FORM' (U+FD6A)"
                }
              },
              [_vm._v("ﵪ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SHEEN WITH MEEM WITH KHAH INITIAL FORM' (U+FD6B)"
                }
              },
              [_vm._v("ﵫ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SHEEN WITH MEEM WITH MEEM FINAL FORM' (U+FD6C)"
                }
              },
              [_vm._v("ﵬ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SHEEN WITH MEEM WITH MEEM INITIAL FORM' (U+FD6D)"
                }
              },
              [_vm._v("ﵭ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE DAD WITH HAH WITH ALEF MAKSURA FINAL FORM' (U+FD6E)"
                }
              },
              [_vm._v("ﵮ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE DAD WITH KHAH WITH MEEM FINAL FORM' (U+FD6F)"
                }
              },
              [_vm._v("ﵯ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfd70")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE DAD WITH KHAH WITH MEEM INITIAL FORM' (U+FD70)"
                }
              },
              [_vm._v("ﵰ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TAH WITH MEEM WITH HAH FINAL FORM' (U+FD71)"
                }
              },
              [_vm._v("ﵱ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TAH WITH MEEM WITH HAH INITIAL FORM' (U+FD72)"
                }
              },
              [_vm._v("ﵲ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TAH WITH MEEM WITH MEEM INITIAL FORM' (U+FD73)"
                }
              },
              [_vm._v("ﵳ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TAH WITH MEEM WITH YEH FINAL FORM' (U+FD74)"
                }
              },
              [_vm._v("ﵴ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE AIN WITH JEEM WITH MEEM FINAL FORM' (U+FD75)"
                }
              },
              [_vm._v("ﵵ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE AIN WITH MEEM WITH MEEM FINAL FORM' (U+FD76)"
                }
              },
              [_vm._v("ﵶ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE AIN WITH MEEM WITH MEEM INITIAL FORM' (U+FD77)"
                }
              },
              [_vm._v("ﵷ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE AIN WITH MEEM WITH ALEF MAKSURA FINAL FORM' (U+FD78)"
                }
              },
              [_vm._v("ﵸ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE GHAIN WITH MEEM WITH MEEM FINAL FORM' (U+FD79)"
                }
              },
              [_vm._v("ﵹ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE GHAIN WITH MEEM WITH YEH FINAL FORM' (U+FD7A)"
                }
              },
              [_vm._v("ﵺ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE GHAIN WITH MEEM WITH ALEF MAKSURA FINAL FORM' (U+FD7B)"
                }
              },
              [_vm._v("ﵻ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE FEH WITH KHAH WITH MEEM FINAL FORM' (U+FD7C)"
                }
              },
              [_vm._v("ﵼ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE FEH WITH KHAH WITH MEEM INITIAL FORM' (U+FD7D)"
                }
              },
              [_vm._v("ﵽ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE QAF WITH MEEM WITH HAH FINAL FORM' (U+FD7E)"
                }
              },
              [_vm._v("ﵾ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE QAF WITH MEEM WITH MEEM FINAL FORM' (U+FD7F)"
                }
              },
              [_vm._v("ﵿ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfd80")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE LAM WITH HAH WITH MEEM FINAL FORM' (U+FD80)"
                }
              },
              [_vm._v("ﶀ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE LAM WITH HAH WITH YEH FINAL FORM' (U+FD81)"
                }
              },
              [_vm._v("ﶁ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE LAM WITH HAH WITH ALEF MAKSURA FINAL FORM' (U+FD82)"
                }
              },
              [_vm._v("ﶂ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE LAM WITH JEEM WITH JEEM INITIAL FORM' (U+FD83)"
                }
              },
              [_vm._v("ﶃ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE LAM WITH JEEM WITH JEEM FINAL FORM' (U+FD84)"
                }
              },
              [_vm._v("ﶄ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE LAM WITH KHAH WITH MEEM FINAL FORM' (U+FD85)"
                }
              },
              [_vm._v("ﶅ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE LAM WITH KHAH WITH MEEM INITIAL FORM' (U+FD86)"
                }
              },
              [_vm._v("ﶆ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE LAM WITH MEEM WITH HAH FINAL FORM' (U+FD87)"
                }
              },
              [_vm._v("ﶇ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE LAM WITH MEEM WITH HAH INITIAL FORM' (U+FD88)"
                }
              },
              [_vm._v("ﶈ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE MEEM WITH HAH WITH JEEM INITIAL FORM' (U+FD89)"
                }
              },
              [_vm._v("ﶉ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE MEEM WITH HAH WITH MEEM INITIAL FORM' (U+FD8A)"
                }
              },
              [_vm._v("ﶊ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE MEEM WITH HAH WITH YEH FINAL FORM' (U+FD8B)"
                }
              },
              [_vm._v("ﶋ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE MEEM WITH JEEM WITH HAH INITIAL FORM' (U+FD8C)"
                }
              },
              [_vm._v("ﶌ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE MEEM WITH JEEM WITH MEEM INITIAL FORM' (U+FD8D)"
                }
              },
              [_vm._v("ﶍ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE MEEM WITH KHAH WITH JEEM INITIAL FORM' (U+FD8E)"
                }
              },
              [_vm._v("ﶎ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE MEEM WITH KHAH WITH MEEM INITIAL FORM' (U+FD8F)"
                }
              },
              [_vm._v("ﶏ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfd90")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FD90" } }, [_vm._v("﶐")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FD91" } }, [_vm._v("﶑")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE MEEM WITH JEEM WITH KHAH INITIAL FORM' (U+FD92)"
                }
              },
              [_vm._v("ﶒ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE HEH WITH MEEM WITH JEEM INITIAL FORM' (U+FD93)"
                }
              },
              [_vm._v("ﶓ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE HEH WITH MEEM WITH MEEM INITIAL FORM' (U+FD94)"
                }
              },
              [_vm._v("ﶔ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE NOON WITH HAH WITH MEEM INITIAL FORM' (U+FD95)"
                }
              },
              [_vm._v("ﶕ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE NOON WITH HAH WITH ALEF MAKSURA FINAL FORM' (U+FD96)"
                }
              },
              [_vm._v("ﶖ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE NOON WITH JEEM WITH MEEM FINAL FORM' (U+FD97)"
                }
              },
              [_vm._v("ﶗ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE NOON WITH JEEM WITH MEEM INITIAL FORM' (U+FD98)"
                }
              },
              [_vm._v("ﶘ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE NOON WITH JEEM WITH ALEF MAKSURA FINAL FORM' (U+FD99)"
                }
              },
              [_vm._v("ﶙ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE NOON WITH MEEM WITH YEH FINAL FORM' (U+FD9A)"
                }
              },
              [_vm._v("ﶚ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE NOON WITH MEEM WITH ALEF MAKSURA FINAL FORM' (U+FD9B)"
                }
              },
              [_vm._v("ﶛ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH MEEM WITH MEEM FINAL FORM' (U+FD9C)"
                }
              },
              [_vm._v("ﶜ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH MEEM WITH MEEM INITIAL FORM' (U+FD9D)"
                }
              },
              [_vm._v("ﶝ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE BEH WITH KHAH WITH YEH FINAL FORM' (U+FD9E)"
                }
              },
              [_vm._v("ﶞ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TEH WITH JEEM WITH YEH FINAL FORM' (U+FD9F)"
                }
              },
              [_vm._v("ﶟ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfda0")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TEH WITH JEEM WITH ALEF MAKSURA FINAL FORM' (U+FDA0)"
                }
              },
              [_vm._v("ﶠ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TEH WITH KHAH WITH YEH FINAL FORM' (U+FDA1)"
                }
              },
              [_vm._v("ﶡ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TEH WITH KHAH WITH ALEF MAKSURA FINAL FORM' (U+FDA2)"
                }
              },
              [_vm._v("ﶢ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TEH WITH MEEM WITH YEH FINAL FORM' (U+FDA3)"
                }
              },
              [_vm._v("ﶣ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE TEH WITH MEEM WITH ALEF MAKSURA FINAL FORM' (U+FDA4)"
                }
              },
              [_vm._v("ﶤ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE JEEM WITH MEEM WITH YEH FINAL FORM' (U+FDA5)"
                }
              },
              [_vm._v("ﶥ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE JEEM WITH HAH WITH ALEF MAKSURA FINAL FORM' (U+FDA6)"
                }
              },
              [_vm._v("ﶦ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE JEEM WITH MEEM WITH ALEF MAKSURA FINAL FORM' (U+FDA7)"
                }
              },
              [_vm._v("ﶧ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SEEN WITH KHAH WITH ALEF MAKSURA FINAL FORM' (U+FDA8)"
                }
              },
              [_vm._v("ﶨ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SAD WITH HAH WITH YEH FINAL FORM' (U+FDA9)"
                }
              },
              [_vm._v("ﶩ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SHEEN WITH HAH WITH YEH FINAL FORM' (U+FDAA)"
                }
              },
              [_vm._v("ﶪ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE DAD WITH HAH WITH YEH FINAL FORM' (U+FDAB)"
                }
              },
              [_vm._v("ﶫ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE LAM WITH JEEM WITH YEH FINAL FORM' (U+FDAC)"
                }
              },
              [_vm._v("ﶬ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE LAM WITH MEEM WITH YEH FINAL FORM' (U+FDAD)"
                }
              },
              [_vm._v("ﶭ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH HAH WITH YEH FINAL FORM' (U+FDAE)"
                }
              },
              [_vm._v("ﶮ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH JEEM WITH YEH FINAL FORM' (U+FDAF)"
                }
              },
              [_vm._v("ﶯ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfdb0")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE YEH WITH MEEM WITH YEH FINAL FORM' (U+FDB0)"
                }
              },
              [_vm._v("ﶰ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE MEEM WITH MEEM WITH YEH FINAL FORM' (U+FDB1)"
                }
              },
              [_vm._v("ﶱ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE QAF WITH MEEM WITH YEH FINAL FORM' (U+FDB2)"
                }
              },
              [_vm._v("ﶲ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE NOON WITH HAH WITH YEH FINAL FORM' (U+FDB3)"
                }
              },
              [_vm._v("ﶳ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE QAF WITH MEEM WITH HAH INITIAL FORM' (U+FDB4)"
                }
              },
              [_vm._v("ﶴ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE LAM WITH HAH WITH MEEM INITIAL FORM' (U+FDB5)"
                }
              },
              [_vm._v("ﶵ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE AIN WITH MEEM WITH YEH FINAL FORM' (U+FDB6)"
                }
              },
              [_vm._v("ﶶ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE KAF WITH MEEM WITH YEH FINAL FORM' (U+FDB7)"
                }
              },
              [_vm._v("ﶷ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE NOON WITH JEEM WITH HAH INITIAL FORM' (U+FDB8)"
                }
              },
              [_vm._v("ﶸ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE MEEM WITH KHAH WITH YEH FINAL FORM' (U+FDB9)"
                }
              },
              [_vm._v("ﶹ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE LAM WITH JEEM WITH MEEM INITIAL FORM' (U+FDBA)"
                }
              },
              [_vm._v("ﶺ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE KAF WITH MEEM WITH MEEM FINAL FORM' (U+FDBB)"
                }
              },
              [_vm._v("ﶻ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE LAM WITH JEEM WITH MEEM FINAL FORM' (U+FDBC)"
                }
              },
              [_vm._v("ﶼ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE NOON WITH JEEM WITH HAH FINAL FORM' (U+FDBD)"
                }
              },
              [_vm._v("ﶽ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE JEEM WITH HAH WITH YEH FINAL FORM' (U+FDBE)"
                }
              },
              [_vm._v("ﶾ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE HAH WITH JEEM WITH YEH FINAL FORM' (U+FDBF)"
                }
              },
              [_vm._v("ﶿ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfdc0")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE MEEM WITH JEEM WITH YEH FINAL FORM' (U+FDC0)"
                }
              },
              [_vm._v("ﷀ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE FEH WITH MEEM WITH YEH FINAL FORM' (U+FDC1)"
                }
              },
              [_vm._v("ﷁ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE BEH WITH HAH WITH YEH FINAL FORM' (U+FDC2)"
                }
              },
              [_vm._v("ﷂ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE KAF WITH MEEM WITH MEEM INITIAL FORM' (U+FDC3)"
                }
              },
              [_vm._v("ﷃ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE AIN WITH JEEM WITH MEEM INITIAL FORM' (U+FDC4)"
                }
              },
              [_vm._v("ﷄ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SAD WITH MEEM WITH MEEM INITIAL FORM' (U+FDC5)"
                }
              },
              [_vm._v("ﷅ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SEEN WITH KHAH WITH YEH FINAL FORM' (U+FDC6)"
                }
              },
              [_vm._v("ﷆ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE NOON WITH JEEM WITH YEH FINAL FORM' (U+FDC7)"
                }
              },
              [_vm._v("ﷇ")]
            ),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FDC8" } }, [_vm._v("﷈")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FDC9" } }, [_vm._v("﷉")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FDCA" } }, [_vm._v("﷊")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FDCB" } }, [_vm._v("﷋")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FDCC" } }, [_vm._v("﷌")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FDCD" } }, [_vm._v("﷍")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FDCE" } }, [_vm._v("﷎")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FDCF" } }, [_vm._v("﷏")])
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfdd0")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FDD0" } }, [_vm._v("﷐")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FDD1" } }, [_vm._v("﷑")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FDD2" } }, [_vm._v("﷒")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FDD3" } }, [_vm._v("﷓")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FDD4" } }, [_vm._v("﷔")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FDD5" } }, [_vm._v("﷕")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FDD6" } }, [_vm._v("﷖")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FDD7" } }, [_vm._v("﷗")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FDD8" } }, [_vm._v("﷘")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FDD9" } }, [_vm._v("﷙")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FDDA" } }, [_vm._v("﷚")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FDDB" } }, [_vm._v("﷛")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FDDC" } }, [_vm._v("﷜")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FDDD" } }, [_vm._v("﷝")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FDDE" } }, [_vm._v("﷞")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FDDF" } }, [_vm._v("﷟")])
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfde0")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FDE0" } }, [_vm._v("﷠")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FDE1" } }, [_vm._v("﷡")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FDE2" } }, [_vm._v("﷢")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FDE3" } }, [_vm._v("﷣")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FDE4" } }, [_vm._v("﷤")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FDE5" } }, [_vm._v("﷥")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FDE6" } }, [_vm._v("﷦")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FDE7" } }, [_vm._v("﷧")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FDE8" } }, [_vm._v("﷨")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FDE9" } }, [_vm._v("﷩")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FDEA" } }, [_vm._v("﷪")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FDEB" } }, [_vm._v("﷫")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FDEC" } }, [_vm._v("﷬")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FDED" } }, [_vm._v("﷭")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FDEE" } }, [_vm._v("﷮")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FDEF" } }, [_vm._v("﷯")])
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfdf0")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SALLA USED AS KORANIC STOP SIGN ISOLATED FORM' (U+FDF0)"
                }
              },
              [_vm._v("ﷰ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE QALA USED AS KORANIC STOP SIGN ISOLATED FORM' (U+FDF1)"
                }
              },
              [_vm._v("ﷱ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE ALLAH ISOLATED FORM' (U+FDF2)"
                }
              },
              [_vm._v("ﷲ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE AKBAR ISOLATED FORM' (U+FDF3)"
                }
              },
              [_vm._v("ﷳ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE MOHAMMAD ISOLATED FORM' (U+FDF4)"
                }
              },
              [_vm._v("ﷴ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SALAM ISOLATED FORM' (U+FDF5)"
                }
              },
              [_vm._v("ﷵ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE RASOUL ISOLATED FORM' (U+FDF6)"
                }
              },
              [_vm._v("ﷶ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE ALAYHE ISOLATED FORM' (U+FDF7)"
                }
              },
              [_vm._v("ﷷ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE WASALLAM ISOLATED FORM' (U+FDF8)"
                }
              },
              [_vm._v("ﷸ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SALLA ISOLATED FORM' (U+FDF9)"
                }
              },
              [_vm._v("ﷹ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE SALLALLAHOU ALAYHE WASALLAM' (U+FDFA)"
                }
              },
              [_vm._v("ﷺ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE JALLAJALALOUHOU' (U+FDFB)"
                }
              },
              [_vm._v("ﷻ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              { attrs: { data: "Unicode Character 'RIAL SIGN' (U+FDFC)" } },
              [_vm._v("﷼")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE BISMILLAH AR-RAHMAN AR-RAHEEM' (U+FDFD)"
                }
              },
              [_vm._v("﷽")]
            ),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FDFE" } }, [_vm._v("﷾")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FDFF" } }, [_vm._v("﷿")])
          ])
        ])
      ]),
      _vm._v(" "),
      _c("h2", { attrs: { id: "arabic-presentation-forms-b" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#arabic-presentation-forms-b" }
          },
          [_vm._v("#")]
        ),
        _vm._v(" Arabic presentation forms B")
      ]),
      _vm._v(" "),
      _c("table", [
        _c("thead", [
          _c("tr", [
            _c("th"),
            _vm._v(" "),
            _c("th", [_vm._v("0x00")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x01")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x02")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x03")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x04")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x05")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x06")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x07")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x08")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x09")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x0A")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x0B")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x0C")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x0D")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x0E")]),
            _vm._v(" "),
            _c("th", [_vm._v("0x0F")])
          ])
        ]),
        _vm._v(" "),
        _c("tbody", [
          _c("tr", [
            _c("th", [_vm._v("0xfe70")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC FATHATAN ISOLATED FORM' (U+FE70)"
                }
              },
              [_vm._v("ﹰ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC TATWEEL WITH FATHATAN ABOVE' (U+FE71)"
                }
              },
              [_vm._v("ﹱ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC DAMMATAN ISOLATED FORM' (U+FE72)"
                }
              },
              [_vm._v("ﹲ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC TAIL FRAGMENT' (U+FE73)"
                }
              },
              [_vm._v("ﹳ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC KASRATAN ISOLATED FORM' (U+FE74)"
                }
              },
              [_vm._v("ﹴ")]
            ),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FE75" } }, [_vm._v("﹵")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC FATHA ISOLATED FORM' (U+FE76)"
                }
              },
              [_vm._v("ﹶ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC FATHA MEDIAL FORM' (U+FE77)"
                }
              },
              [_vm._v("ﹷ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC DAMMA ISOLATED FORM' (U+FE78)"
                }
              },
              [_vm._v("ﹸ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC DAMMA MEDIAL FORM' (U+FE79)"
                }
              },
              [_vm._v("ﹹ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC KASRA ISOLATED FORM' (U+FE7A)"
                }
              },
              [_vm._v("ﹺ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC KASRA MEDIAL FORM' (U+FE7B)"
                }
              },
              [_vm._v("ﹻ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC SHADDA ISOLATED FORM' (U+FE7C)"
                }
              },
              [_vm._v("ﹼ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC SHADDA MEDIAL FORM' (U+FE7D)"
                }
              },
              [_vm._v("ﹽ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC SUKUN ISOLATED FORM' (U+FE7E)"
                }
              },
              [_vm._v("ﹾ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data: "Unicode Character 'ARABIC SUKUN MEDIAL FORM' (U+FE7F)"
                }
              },
              [_vm._v("ﹿ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfe80")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER HAMZA ISOLATED FORM' (U+FE80)"
                }
              },
              [_vm._v("ﺀ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER ALEF WITH MADDA ABOVE ISOLATED FORM' (U+FE81)"
                }
              },
              [_vm._v("ﺁ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER ALEF WITH MADDA ABOVE FINAL FORM' (U+FE82)"
                }
              },
              [_vm._v("ﺂ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER ALEF WITH HAMZA ABOVE ISOLATED FORM' (U+FE83)"
                }
              },
              [_vm._v("ﺃ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER ALEF WITH HAMZA ABOVE FINAL FORM' (U+FE84)"
                }
              },
              [_vm._v("ﺄ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER WAW WITH HAMZA ABOVE ISOLATED FORM' (U+FE85)"
                }
              },
              [_vm._v("ﺅ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER WAW WITH HAMZA ABOVE FINAL FORM' (U+FE86)"
                }
              },
              [_vm._v("ﺆ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER ALEF WITH HAMZA BELOW ISOLATED FORM' (U+FE87)"
                }
              },
              [_vm._v("ﺇ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER ALEF WITH HAMZA BELOW FINAL FORM' (U+FE88)"
                }
              },
              [_vm._v("ﺈ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER YEH WITH HAMZA ABOVE ISOLATED FORM' (U+FE89)"
                }
              },
              [_vm._v("ﺉ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER YEH WITH HAMZA ABOVE FINAL FORM' (U+FE8A)"
                }
              },
              [_vm._v("ﺊ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER YEH WITH HAMZA ABOVE INITIAL FORM' (U+FE8B)"
                }
              },
              [_vm._v("ﺋ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER YEH WITH HAMZA ABOVE MEDIAL FORM' (U+FE8C)"
                }
              },
              [_vm._v("ﺌ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER ALEF ISOLATED FORM' (U+FE8D)"
                }
              },
              [_vm._v("ﺍ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER ALEF FINAL FORM' (U+FE8E)"
                }
              },
              [_vm._v("ﺎ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER BEH ISOLATED FORM' (U+FE8F)"
                }
              },
              [_vm._v("ﺏ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfe90")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER BEH FINAL FORM' (U+FE90)"
                }
              },
              [_vm._v("ﺐ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER BEH INITIAL FORM' (U+FE91)"
                }
              },
              [_vm._v("ﺑ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER BEH MEDIAL FORM' (U+FE92)"
                }
              },
              [_vm._v("ﺒ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER TEH MARBUTA ISOLATED FORM' (U+FE93)"
                }
              },
              [_vm._v("ﺓ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER TEH MARBUTA FINAL FORM' (U+FE94)"
                }
              },
              [_vm._v("ﺔ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER TEH ISOLATED FORM' (U+FE95)"
                }
              },
              [_vm._v("ﺕ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER TEH FINAL FORM' (U+FE96)"
                }
              },
              [_vm._v("ﺖ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER TEH INITIAL FORM' (U+FE97)"
                }
              },
              [_vm._v("ﺗ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER TEH MEDIAL FORM' (U+FE98)"
                }
              },
              [_vm._v("ﺘ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER THEH ISOLATED FORM' (U+FE99)"
                }
              },
              [_vm._v("ﺙ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER THEH FINAL FORM' (U+FE9A)"
                }
              },
              [_vm._v("ﺚ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER THEH INITIAL FORM' (U+FE9B)"
                }
              },
              [_vm._v("ﺛ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER THEH MEDIAL FORM' (U+FE9C)"
                }
              },
              [_vm._v("ﺜ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER JEEM ISOLATED FORM' (U+FE9D)"
                }
              },
              [_vm._v("ﺝ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER JEEM FINAL FORM' (U+FE9E)"
                }
              },
              [_vm._v("ﺞ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER JEEM INITIAL FORM' (U+FE9F)"
                }
              },
              [_vm._v("ﺟ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfea0")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER JEEM MEDIAL FORM' (U+FEA0)"
                }
              },
              [_vm._v("ﺠ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER HAH ISOLATED FORM' (U+FEA1)"
                }
              },
              [_vm._v("ﺡ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER HAH FINAL FORM' (U+FEA2)"
                }
              },
              [_vm._v("ﺢ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER HAH INITIAL FORM' (U+FEA3)"
                }
              },
              [_vm._v("ﺣ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER HAH MEDIAL FORM' (U+FEA4)"
                }
              },
              [_vm._v("ﺤ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER KHAH ISOLATED FORM' (U+FEA5)"
                }
              },
              [_vm._v("ﺥ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER KHAH FINAL FORM' (U+FEA6)"
                }
              },
              [_vm._v("ﺦ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER KHAH INITIAL FORM' (U+FEA7)"
                }
              },
              [_vm._v("ﺧ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER KHAH MEDIAL FORM' (U+FEA8)"
                }
              },
              [_vm._v("ﺨ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER DAL ISOLATED FORM' (U+FEA9)"
                }
              },
              [_vm._v("ﺩ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER DAL FINAL FORM' (U+FEAA)"
                }
              },
              [_vm._v("ﺪ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER THAL ISOLATED FORM' (U+FEAB)"
                }
              },
              [_vm._v("ﺫ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER THAL FINAL FORM' (U+FEAC)"
                }
              },
              [_vm._v("ﺬ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER REH ISOLATED FORM' (U+FEAD)"
                }
              },
              [_vm._v("ﺭ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER REH FINAL FORM' (U+FEAE)"
                }
              },
              [_vm._v("ﺮ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER ZAIN ISOLATED FORM' (U+FEAF)"
                }
              },
              [_vm._v("ﺯ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfeb0")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER ZAIN FINAL FORM' (U+FEB0)"
                }
              },
              [_vm._v("ﺰ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER SEEN ISOLATED FORM' (U+FEB1)"
                }
              },
              [_vm._v("ﺱ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER SEEN FINAL FORM' (U+FEB2)"
                }
              },
              [_vm._v("ﺲ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER SEEN INITIAL FORM' (U+FEB3)"
                }
              },
              [_vm._v("ﺳ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER SEEN MEDIAL FORM' (U+FEB4)"
                }
              },
              [_vm._v("ﺴ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER SHEEN ISOLATED FORM' (U+FEB5)"
                }
              },
              [_vm._v("ﺵ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER SHEEN FINAL FORM' (U+FEB6)"
                }
              },
              [_vm._v("ﺶ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER SHEEN INITIAL FORM' (U+FEB7)"
                }
              },
              [_vm._v("ﺷ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER SHEEN MEDIAL FORM' (U+FEB8)"
                }
              },
              [_vm._v("ﺸ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER SAD ISOLATED FORM' (U+FEB9)"
                }
              },
              [_vm._v("ﺹ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER SAD FINAL FORM' (U+FEBA)"
                }
              },
              [_vm._v("ﺺ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER SAD INITIAL FORM' (U+FEBB)"
                }
              },
              [_vm._v("ﺻ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER SAD MEDIAL FORM' (U+FEBC)"
                }
              },
              [_vm._v("ﺼ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER DAD ISOLATED FORM' (U+FEBD)"
                }
              },
              [_vm._v("ﺽ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER DAD FINAL FORM' (U+FEBE)"
                }
              },
              [_vm._v("ﺾ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER DAD INITIAL FORM' (U+FEBF)"
                }
              },
              [_vm._v("ﺿ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfec0")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER DAD MEDIAL FORM' (U+FEC0)"
                }
              },
              [_vm._v("ﻀ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER TAH ISOLATED FORM' (U+FEC1)"
                }
              },
              [_vm._v("ﻁ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER TAH FINAL FORM' (U+FEC2)"
                }
              },
              [_vm._v("ﻂ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER TAH INITIAL FORM' (U+FEC3)"
                }
              },
              [_vm._v("ﻃ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER TAH MEDIAL FORM' (U+FEC4)"
                }
              },
              [_vm._v("ﻄ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER ZAH ISOLATED FORM' (U+FEC5)"
                }
              },
              [_vm._v("ﻅ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER ZAH FINAL FORM' (U+FEC6)"
                }
              },
              [_vm._v("ﻆ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER ZAH INITIAL FORM' (U+FEC7)"
                }
              },
              [_vm._v("ﻇ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER ZAH MEDIAL FORM' (U+FEC8)"
                }
              },
              [_vm._v("ﻈ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER AIN ISOLATED FORM' (U+FEC9)"
                }
              },
              [_vm._v("ﻉ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER AIN FINAL FORM' (U+FECA)"
                }
              },
              [_vm._v("ﻊ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER AIN INITIAL FORM' (U+FECB)"
                }
              },
              [_vm._v("ﻋ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER AIN MEDIAL FORM' (U+FECC)"
                }
              },
              [_vm._v("ﻌ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER GHAIN ISOLATED FORM' (U+FECD)"
                }
              },
              [_vm._v("ﻍ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER GHAIN FINAL FORM' (U+FECE)"
                }
              },
              [_vm._v("ﻎ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER GHAIN INITIAL FORM' (U+FECF)"
                }
              },
              [_vm._v("ﻏ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfed0")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER GHAIN MEDIAL FORM' (U+FED0)"
                }
              },
              [_vm._v("ﻐ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER FEH ISOLATED FORM' (U+FED1)"
                }
              },
              [_vm._v("ﻑ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER FEH FINAL FORM' (U+FED2)"
                }
              },
              [_vm._v("ﻒ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER FEH INITIAL FORM' (U+FED3)"
                }
              },
              [_vm._v("ﻓ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER FEH MEDIAL FORM' (U+FED4)"
                }
              },
              [_vm._v("ﻔ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER QAF ISOLATED FORM' (U+FED5)"
                }
              },
              [_vm._v("ﻕ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER QAF FINAL FORM' (U+FED6)"
                }
              },
              [_vm._v("ﻖ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER QAF INITIAL FORM' (U+FED7)"
                }
              },
              [_vm._v("ﻗ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER QAF MEDIAL FORM' (U+FED8)"
                }
              },
              [_vm._v("ﻘ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER KAF ISOLATED FORM' (U+FED9)"
                }
              },
              [_vm._v("ﻙ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER KAF FINAL FORM' (U+FEDA)"
                }
              },
              [_vm._v("ﻚ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER KAF INITIAL FORM' (U+FEDB)"
                }
              },
              [_vm._v("ﻛ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER KAF MEDIAL FORM' (U+FEDC)"
                }
              },
              [_vm._v("ﻜ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER LAM ISOLATED FORM' (U+FEDD)"
                }
              },
              [_vm._v("ﻝ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER LAM FINAL FORM' (U+FEDE)"
                }
              },
              [_vm._v("ﻞ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER LAM INITIAL FORM' (U+FEDF)"
                }
              },
              [_vm._v("ﻟ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfee0")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER LAM MEDIAL FORM' (U+FEE0)"
                }
              },
              [_vm._v("ﻠ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER MEEM ISOLATED FORM' (U+FEE1)"
                }
              },
              [_vm._v("ﻡ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER MEEM FINAL FORM' (U+FEE2)"
                }
              },
              [_vm._v("ﻢ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER MEEM INITIAL FORM' (U+FEE3)"
                }
              },
              [_vm._v("ﻣ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER MEEM MEDIAL FORM' (U+FEE4)"
                }
              },
              [_vm._v("ﻤ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER NOON ISOLATED FORM' (U+FEE5)"
                }
              },
              [_vm._v("ﻥ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER NOON FINAL FORM' (U+FEE6)"
                }
              },
              [_vm._v("ﻦ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER NOON INITIAL FORM' (U+FEE7)"
                }
              },
              [_vm._v("ﻧ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER NOON MEDIAL FORM' (U+FEE8)"
                }
              },
              [_vm._v("ﻨ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER HEH ISOLATED FORM' (U+FEE9)"
                }
              },
              [_vm._v("ﻩ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER HEH FINAL FORM' (U+FEEA)"
                }
              },
              [_vm._v("ﻪ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER HEH INITIAL FORM' (U+FEEB)"
                }
              },
              [_vm._v("ﻫ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER HEH MEDIAL FORM' (U+FEEC)"
                }
              },
              [_vm._v("ﻬ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER WAW ISOLATED FORM' (U+FEED)"
                }
              },
              [_vm._v("ﻭ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER WAW FINAL FORM' (U+FEEE)"
                }
              },
              [_vm._v("ﻮ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER ALEF MAKSURA ISOLATED FORM' (U+FEEF)"
                }
              },
              [_vm._v("ﻯ")]
            )
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("th", [_vm._v("0xfef0")]),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER ALEF MAKSURA FINAL FORM' (U+FEF0)"
                }
              },
              [_vm._v("ﻰ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER YEH ISOLATED FORM' (U+FEF1)"
                }
              },
              [_vm._v("ﻱ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER YEH FINAL FORM' (U+FEF2)"
                }
              },
              [_vm._v("ﻲ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER YEH INITIAL FORM' (U+FEF3)"
                }
              },
              [_vm._v("ﻳ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LETTER YEH MEDIAL FORM' (U+FEF4)"
                }
              },
              [_vm._v("ﻴ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE LAM WITH ALEF WITH MADDA ABOVE ISOLATED FORM' (U+FEF5)"
                }
              },
              [_vm._v("ﻵ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE LAM WITH ALEF WITH MADDA ABOVE FINAL FORM' (U+FEF6)"
                }
              },
              [_vm._v("ﻶ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE LAM WITH ALEF WITH HAMZA ABOVE ISOLATED FORM' (U+FEF7)"
                }
              },
              [_vm._v("ﻷ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE LAM WITH ALEF WITH HAMZA ABOVE FINAL FORM' (U+FEF8)"
                }
              },
              [_vm._v("ﻸ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE LAM WITH ALEF WITH HAMZA BELOW ISOLATED FORM' (U+FEF9)"
                }
              },
              [_vm._v("ﻹ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE LAM WITH ALEF WITH HAMZA BELOW FINAL FORM' (U+FEFA)"
                }
              },
              [_vm._v("ﻺ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE LAM WITH ALEF ISOLATED FORM' (U+FEFB)"
                }
              },
              [_vm._v("ﻻ")]
            ),
            _vm._v(" "),
            _c(
              "td",
              {
                attrs: {
                  data:
                    "Unicode Character 'ARABIC LIGATURE LAM WITH ALEF FINAL FORM' (U+FEFC)"
                }
              },
              [_vm._v("ﻼ")]
            ),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FEFD" } }, [_vm._v("﻽")]),
            _vm._v(" "),
            _c("td", { attrs: { data: "U+FEFE" } }, [_vm._v("﻾")]),
            _vm._v(" "),
            _c("td", {
              attrs: {
                data: "Unicode Character 'ZERO WIDTH NO-BREAK SPACE' (U+FEFF)"
              }
            })
          ])
        ])
      ])
    ]
  )
}
var staticRenderFns = []
render._withStripped = true

export { render, staticRenderFns }"}]}