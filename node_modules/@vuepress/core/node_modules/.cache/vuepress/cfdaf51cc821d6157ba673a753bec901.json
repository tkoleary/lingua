{"remainingRequest":"/Users/terrenceoleary/sites/GitHub/lingua/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/terrenceoleary/sites/GitHub/lingua/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/terrenceoleary/sites/GitHub/lingua/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/terrenceoleary/sites/GitHub/lingua/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/terrenceoleary/sites/GitHub/lingua/docs/guide/languages/readme.md?vue&type=template&id=03fe0938&","dependencies":[{"path":"/Users/terrenceoleary/sites/GitHub/lingua/docs/guide/languages/readme.md","mtime":1598474711228},{"path":"/Users/terrenceoleary/sites/GitHub/lingua/node_modules/cache-loader/dist/cjs.js","mtime":1595622292152},{"path":"/Users/terrenceoleary/sites/GitHub/lingua/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1595622292699},{"path":"/Users/terrenceoleary/sites/GitHub/lingua/node_modules/cache-loader/dist/cjs.js","mtime":1595622292152},{"path":"/Users/terrenceoleary/sites/GitHub/lingua/node_modules/vue-loader/lib/index.js","mtime":1595622292699},{"path":"/Users/terrenceoleary/sites/GitHub/lingua/node_modules/@vuepress/markdown-loader/index.js","mtime":1595622292351}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ0NvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yJyx7YXR0cnM6eyJzbG90LWtleSI6X3ZtLiRwYXJlbnQuc2xvdEtleX19LFtfYygnaDEnLHthdHRyczp7ImlkIjoibGFuZ3VhZ2VzLWFuZC1zY3JpcHRzIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjbGFuZ3VhZ2VzLWFuZC1zY3JpcHRzIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIExhbmd1YWdlcyBhbmQgc2NyaXB0cyIpXSksX3ZtLl92KCIgIiksX2MoJ2gyJyx7YXR0cnM6eyJpZCI6InN1cHBvcnRlZC1zY3JpcHRzLTQ1In19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjc3VwcG9ydGVkLXNjcmlwdHMtNDUifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgU3VwcG9ydGVkIHNjcmlwdHMgKDQ1KToiKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJBZGxhbSwgQXJhYmljLCBBcm1lbmlhbiwgQmFtdW0sIEJlbmdhbGksIEJyYWhtaSwgQnVnaW5lc2UsIEJ1aGlkLCBDYW5hZGlhbi1BYm9yaWdpbmFsLCBDaGVyb2tlZSwgQ2hpbmVzZSwgKHNpbXBsaWZpZWQpLCBDaGluZXNlLCAodHJhZGl0aW9uYWwpLCBDaGluZXNlLCAoSG9uZyBLb25nKSwgQ3lyaWxsaWMsIERldmFuYWdhcmksIEV0aGlvcGljLCBHZW9yZ2lhbiwgR3JlZWssIEd1amFyYXRpLCBHdXJtdWtoaSwgSGVicmV3LCBKYXBhbmVzZSwgS2FubmFkYSwgS2htZXIsIEtvcmVhbiwgTGF0aW4sIExhbywgTGltYnUsIE1hbGF5YWxhbSwgTXlhbm1hciwgTmFza2ggQXJhYmljLCBPcml5YSwgUmFzaGkgSGVicmV3LCBTaW5oYWxhLCBUYWdhbG9nLCBUYW1pbCwgVGFpLWxlLCBUYWktdGhhbSwgVGFpLXZpZXQsIFRlbHVndSwgVGhhYW5hLCBUaGFpLCBUaWJldGFuLCBXYXJhbmctY2l0aSwgWmFuYWJhemFyIHNxdWFyZSwiKV0pLF92bS5fdigiICIpLF9jKCdoMicse2F0dHJzOnsiaWQiOiJzdXBwb3J0ZWQtbGFuZ3VhZ2VzLTQ4NyJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI3N1cHBvcnRlZC1sYW5ndWFnZXMtNDg3In19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIFN1cHBvcnRlZCBsYW5ndWFnZXMgKDQ4Nyk6IildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiRnVsYWgsIEFyYWJpYywgUGVyc2lhbiwgUGFzaHRvLCBVcmR1LCBOZHp3YW5pIENvbW9yaWFuLCBOZ2F6aWRqYSBDb21vcmlhbiwgVHVuaXNpYW4gQXJhYmljLCBBbGdlcmlhbiBBcmFiaWMsIE5hamRpIEFyYWJpYywgTW9yb2NjYW4gQXJhYmljLCBFZ3lwdGlhbiBBcmFiaWMsIEJlamEsIFdlc3Rlcm4gQmFsb2NoaSwgQmFraHRpYXJpLCBDZW50cmFsIEt1cmRpc2gsIERlY2NhbiwgTm9iaWluLCBab3JvYXN0cmlhbiBEYXJpLCBLYWNoaSBLb2xpLCBHdWphcmksIEdpbGFraSwgSGF6YXJhZ2ksIFNvdXRoZXJuIEhpbmRrbywgUGFya2FyaSBLb2xpLCBXYWRpeWFyYSBLb2xpLCBMYWhuZGEsIExha2ksIE5vcnRoZXJuIEx1cmksIFNvdXRoZXJuIEx1cmksIFBhdHRhbmkgTWFsYXksIEluZHVzIEtvaGlzdGFuaSwgTWF6YW5kZXJhbmksIFBhcnNpLURhcmksIERvbWFyaSwgU291dGhlcm4gS3VyZGlzaCwgU2FyYWlraSwgVG9yd2FsaSwgQXJtZW5pYW4sIEJhbXVuIChCYW1vdW4pLCBCYW5nbGEsIEFzc2FtZXNlLCBCaXNobnVwcml5YSwgR2FybywgTWl6bywgUmFuZ3B1cmksIENoZXJva2VlLCBHYW4gQ2hpbmVzZSwgSGFra2EgQ2hpbmVzZSwgWGlhbmcgQ2hpbmVzZSwgTWluIE5hbiBDaGluZXNlLCBXdSBDaGluZXNlLCBCZWxhcnVzaWFuLCBCdWxnYXJpYW4sIE1hY2Vkb25pYW4sIE1vbmdvbGlhbiwgUnVzc2lhbiwgVWtyYWluaWFuLCBBYmtoYXppYW4sIEFiYXphLCBBZHlnaGUsIFNvdXRoZXJuIEFsdGFpLCBBdmFyaWMsIEJhc2hraXIsIEJ1cmlhdCwgQ2hlY2hlbiwgTWFyaSwgU2hvciwgQ2h1a290LCBDcmltZWFuIFR1cmtpc2gsIENodXZhc2gsIERhcmd3YSwgRHVuZ2FuLCBFdmVua2ksIE5hbmFpLCBLYXJhLUthbHBhaywgS2FiYXJkaWFuLCBLaGFudHksIEtoYWthcywgS29taS1QZXJteWFrLCBLb3J5YWssIEthcmFjaGF5LUJhbGthciwgS3VteWssIEtvbWksIExhaywgTGV6Z2hpYW4sIE1va3NoYSwgTWFuc2ksIFdlc3Rlcm4gTWFyaSwgRXJ6eWEsIE5vZ2FpLCBPc3NldGljLCBSdXN5biwgU2FraGEsIFNlbGt1cCwgVGFiYXNzYXJhbiwgVGF0YXIsIFR1dmluaWFuLCBVZGloZSwgS2FsbXlrLCBOZW5ldHMsIE5lcGFsaSwgQW5naWthLCBBd2FkaGksIEJhbnRhd2EsIEJhZ2hlbGksIEhhcnlhbnZpLCBCaGlsaSwgQmhpbGFsaSwgQmhvanB1cmksIEthbmF1amksIEJyYWosIEJvZG8sIEJhdGVyaSwgRG90eWFsaSwgR2FyaHdhbGksIEdvYW4gS29ua2FuaSwgR3VydW5nLCBDaGhhdHRpc2dhcmhpLCBIbywgSGFkb3RoaSwgSnVtbGksIEthY2hoaSwgS3VtYW9uaSwgS2hhbmRlc2ksIEtvbmthbmksIEt1cnVraCwgTWFnYWhpLCBNYWl0aGlsaSwgRWFzdGVybiBNYWdhciwgTWFyYXRoaSwgV2VzdGVybiBNYWdhciwgTWV3YXJpLCBNYXJ3YXJpLCBOZXdhcmksIE5pbWFkaSwgUmFqYXN0aGFuaSwgUmFqYmFuc2hpLCBTYWRyaSwgU2lybWF1cmksIFNoZWtoYXdhdGksIFRodWx1bmcsIERhbmdhdXJhIFRoYXJ1LCBLb2NoaWxhIFRoYXJ1LCBSYW5hIFRoYXJ1LCBLYXRob3JpeWEgVGhhcnUsIFdhZ2RpLCBNZXdhdGksIEthbmdyaSwgU2hlcnBhLCBBbWhhcmljLCBUaWdyaW55YSwgQmxpbiwgT3JvbW8sIFRpZ3JlLCBXb2xheXR0YSwgR2VleiwgR3JlZWssIEJhbGthbiBHYWdhdXogVHVya2lzaCwgUG9udGljLCBUc2Frb25pYW4sIENvcHRpYywgQW5jaWVudCBHcmVlaywgaGVicmV3LCBIZWJyZXcsIEp1ZGVvLVBlcnNpYW4sIEp1ZGVvLUFyYWJpYywgTGFkaW5vLCBZaWRkaXNoLCBTYW1hcml0YW4gQXJhbWFpYywgR3VqYXJhdGksIFB1bmphYmksIEp1ZGVvLVBlcnNpYW4sIEp1ZGVvLUFyYWJpYywgTGFkaW5vLCBZaWRkaXNoLCBKYXBhbmVzZSwgS2FubmFkYSwgVHVsdSwgS2htZXIsIEtvcmVhbiwgTGFvLCBIbW9uZyBOanVhLCBBeW1hcmEsIEJpc2xhbWEsIENhdGFsYW4sIENoYW1vcnJvLCBDemVjaCwgRGFuaXNoLCBHZXJtYW4sIEVuZ2xpc2gsIFNwYW5pc2gsIEVzdG9uaWFuLCBGaW5uaXNoLCBGaWxpcGlubywgRmlqaWFuLCBGYXJvZXNlLCBGcmVuY2gsIElyaXNoLCBHaWxiZXJ0ZXNlLCBHdWFyYW5pLCBTd2lzcyBHZXJtYW4sIE1hbngsIEhpcmkgTW90dSwgQ3JvYXRpYW4sIEhhaXRpYW4gQ3Jlb2xlLCBIdW5nYXJpYW4sIEljZWxhbmRpYywgSXRhbGlhbiwgS2FsYWFsbGlzdXQsIEx1eGVtYm91cmdpc2gsIExpdGh1YW5pYW4sIExhdHZpYW4sIE1hbGFnYXN5LCBNYXJzaGFsbGVzZSwgTWFvcmksIE1hbHRlc2UsIE5hdXJ1LCBOb3J3ZWdpYW4gQm9rbcOlbCwgTm9ydGggTmRlYmVsZSwgTml1ZWFuLCBEdXRjaCwgTm9yd2VnaWFuIE55bm9yc2ssIE55YW5qYSwgUGFwaWFtZW50bywgUGFsYXVhbiwgUG9saXNoLCBQb3J0dWd1ZXNlLCBRdWVjaHVhLCBSdW5kaSwgS2lueWFyd2FuZGEsIFNhbmdvLCBTbG92YWssIFNsb3ZlbmlhbiwgU2Ftb2FuLCBTaG9uYSwgQWxiYW5pYW4sIFN3YXRpLCBTb3V0aGVybiBTb3RobywgU3dlZGlzaCwgU3dhaGlsaSwgVGV0dW0sIFRva2VsYXUsIFRzd2FuYSwgVG9uZ2FuLCBUb2sgUGlzaW4sIFR1dmFsdSwgVGFoaXRpYW4sIFlvcnViYSwgQWZhciwgQWJyb24sIEFjaGluZXNlLCBBY29saSwgQWRhbmdtZSwgQWZyaWthYW5zLCBBZ2hlbSwgQWthbiwgQWxhYmFtYSwgQWxldXQsIEdoZWcgQWxiYW5pYW4sIEFtbywgQXJhZ29uZXNlLCBVYWIgTWV0bywgTWFwdWNoZSwgQXJhb25hLCBBcmFwYWhvLCBBcmF3YWssIEFzdSwgQXN0dXJpYW4sIEF0aWthbWVrdywgQmF2YXJpYW4sIEJhc2FhLCBHaG9tYWxhLCBCYW91bMOpLCBCZW1iYSwgQmV0YXdpLCBCZW5hLCBCYWZ1dCwgQmlrb2wsIEJpbmksIEJhbmphciwgS29tLCBCdWhpZCwgU2lrc2lrYSwgQm9tdSwgS29ybyBXYWNoaSwgQnJldG9uLCBBa29vc2UsIFJpbmNvbmFkYSBCaWtvbCwgQnVzaGksIEJ1Z2luZXNlLCBCdWx1LCBCdWJlLCBNZWR1bWJhLCBKZW5hYW1hIEJvem8sIEvJm2zJm25nYXhvIEJvem8sIENhZGRvLCBDYXJpYiwgQ2F5dWdhLCBBdHNhbSwgQ2VidWFubywgQ2hpZ2EsIENodXVrZXNlLCBDaGlub29rIEphcmdvbiwgQ2hvY3RhdywgQ2hleWVubmUsIENoaWNrYXNhdywgQ29yc2ljYW4sIENhcGl6bm9uLCBTb3V0aGVybiBFYXN0IENyZWUsIE5vcnRoZXJuIEVhc3QgQ3JlZSwgU2VzZWx3YSBDcmVvbGUgRnJlbmNoLCBLYXNodWJpYW4sIFRlZGltIENoaW4sIFdlbHNoLCBEYWtvdGEsIFRhaXRhLCBEZWxhd2FyZSwgRG9ncmliLCBEaW5rYSwgWmFybWEsIERhbiwgTG93ZXIgU29yYmlhbiwgVG9tbyBLYW4gRG9nb24sIENlbnRyYWwgRHVzdW4sIER1YWxhLCBEeXVsYSwgRW1idSwgRXdlLCBFZmlrLCBFbWlsaWFuLCBFa2FqdWssIENlbnRyYWwgWXVwaWssIEJhc3F1ZSwgRXdvbmRvLCBFeHRyZW1hZHVyYW4sIEZhbmcsIE1hYXNpbmEgRnVsZnVsZGUsIFRvcm5lZGFsZW4gRmlubmlzaCwgRm9uLCBDYWp1biBGcmVuY2gsIEFycGl0YW4sIE5vcnRoZXJuIEZyaXNpYW4sIEVhc3Rlcm4gRnJpc2lhbiwgRWFzdCBGdXR1bmEsIENlbnRyYWwtRWFzdGVybiBOaWdlciBGdWxmdWxkZSwgRnJpdWxpYW4sIE5pZ2VyaWFuIEZ1bGZ1bGRlLCBGdXIsIFdlc3Rlcm4gRnJpc2lhbiwgR2EsIEdheW8sIEdiYXlhLCBHdWlhbmVzZSBDcmVvbGUgRnJlbmNoLCBTY290dGlzaCBHYWVsaWMsIEdhbGljaWFuLCBHb3JvbnRhbG8sIEdyb25pbmdzLCBHcmVibywgR3VhamFqw6FyYSwgV2F5dXUsIEZyYWZyYSwgR3VzaWksIEd3aWNoyrxpbiwgSGFpZGEsIEhhd2FpaWFuLCBIaWxpZ2F5bm9uLCBIbW9uZywgSGFudW5vbywgSG9waSwgVXBwZXIgU29yYmlhbiwgSHVwYSwgSGVyZXJvLCBJYmFuLCBJYmliaW8sIElmw6gsIElnYm8sIEludXBpYXEsIEludWlubmFxdHVuLCBJbG9rbywgSW5ncmlhbiwgSmFtYWljYW4gQ3Jlb2xlIEVuZ2xpc2gsIE5nb21iYSwgTWFjaGFtZSwgS2FieWxlLCBLYWNoaW4sIEpqdSwgS2FtYmEsIFhhYXNvbmdheGFuZ28sIFR5YXAsIEthbGFuZ2EsIE1ha29uZGUsIEthYnV2ZXJkaWFudSwgS29ybywgS29uZ28sIEtvbWVyaW5nLCBLYWluZ2FuZywgS295cmEgQ2hpaW5pLCBLaWt1eXUsIEtpcm1hbmpraSwgS3VhbnlhbWEsIEtha28sIEthbGVuamluLCBLaW1idW5kdSwgS29zcmFlYW4sIEtwZWxsZSwgS2FudXJpLCBLcmlvLCBLaW5hcmF5LWEsIEthcmVsaWFuLCBTaGFtYmFsYSwgQmFmaWEsIENvbG9nbmlhbiwgS3V0ZW5haSwgS2VyaW5jaSwgQ29ybmlzaCwgTGFuZ2ksIExhbmdvIChVZ2FuZGEpLCBMYW1iYSwgVG9sYWtpLCBMaW1idXJnaXNoLCBMaWd1cmlhbiwgTGl2b25pYW4sIExha290YSwgTG9tYmFyZCwgTWFkdXJlc2UsIFJvdHVtYW4sIFRpdiwgVGFtYXNoZWssIE55YXNhIFRvbmdhLCBUYXJva28sIFRzb25nYSwgVGF1c3VnLCBUc2ltc2hpYW4sIFRvb3JvLCBUdW1idWthLCBUYXNhd2FxLCBVbGl0aGlhbiwgVW1idW5kdSwgVmVuZGEsIFZlbmV0aWFuLCBWZXBzLCBWaXJnaW4gSXNsYW5kcyBDcmVvbGUgRW5nbGlzaCwgV2VzdCBGbGVtaXNoLCBNYWluLUZyYW5jb25pYW4sIE1ha2h1d2EsIFZvdGljLCBWw7VybywgVnVuam8sIFdhbGxvb24sIFdhbHNlciwgV2FyYXksIFdhc2hvLCBXYXJscGlyaSwgV2FsbGlzaWFuLCBYYXbDoW50ZSwgWGhvc2EsIFNvZ2EsIFlhbywgWWFwZXNlLCBZYW5nYmVuLCBZZW1iYSwgTmhlZW5nYXR1LCBZdWNhdGVjbywgWmFnaGF3YSwgWmFwb3RlYywgWmVlbGFuZGljLCBOZWdlcmkgU2VtYmlsYW4gTWFsYXksIFp1bHUsIFp1bmksIFphemEsIE1hbGF5YWxhbSwgT3JpeWEsIFNpbmhhbGEsIFRhbWlsLCBCYWRhZ2EsIExhbWJhZGksIFRlbHVndSwgV2FkZGFyLCBUaGFpLCBLdXksIE5vcnRoZXJuIEtobWVyLCBXZXN0ZXJuIExhd2EsIEVhc3Rlcm4gTGF3YSwgU291dGhlcm4gVGhhaSwgTm9ydGhlYXN0ZXJuIFRoYWksIERpdmVoaSIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkFuY2llbnQgYW5kIGludmVudGVkIHNjcmlwdHMgYXJlIG5vdCBjdXJyZW50bHkgb24gdGhlIHJvYWRtYXAgYnV0IGZlZWwgZnJlZSB0byBjb250cmlidXRlIHRoZW0hIildKSxfdm0uX3YoIiAiKSxfYygnaDInLHthdHRyczp7ImlkIjoic2NyaXB0LWRldGFpbHMifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNzY3JpcHQtZGV0YWlscyJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiBTY3JpcHQgZGV0YWlscyIpXSldKX0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}