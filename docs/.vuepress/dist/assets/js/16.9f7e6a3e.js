(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{360:function(t,e,a){"use strict";a.r(e);var s=a(42),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"about"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#about"}},[t._v("#")]),t._v(" About")]),t._v(" "),a("h3",{attrs:{id:"simple"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simple"}},[t._v("#")]),t._v(" Simple")]),t._v(" "),a("p",[t._v("Out-of-the-box, Lingua will load webfonts for the languages and scripts of 99.8% of the world's population (45 scripts and 780 languages). Add Lingua to your site, and wherever a language code exists in your HTML, the correct webfont will be loaded for that text. Only the fonts and characters that are actually used on the page will be loaded.")]),t._v(" "),a("h3",{attrs:{id:"design-centric"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#design-centric"}},[t._v("#")]),t._v(" Design centric")]),t._v(" "),a("p",[t._v("By default Lingua styles all scripts with the default weight, but we also include easy-to-remember helper classes, for example "),a("code",[t._v("lf-sans")]),t._v(", which will apply the sans version for "),a("em",[t._v("any")]),t._v(" script. We have classes for both width and weight like "),a("code",[t._v("lf-ulight")]),t._v(" (ultra-light, weight 100), or "),a("code",[t._v("lf-condensed")]),t._v(" (width 80), and mixins to build your own custom classes like "),a("code",[t._v("lf-ulight-xcondensed")]),t._v(", or "),a("code",[t._v("lf-xlight-[your custom variable]")]),t._v(". We even have unique classes for outlier font variants and styles some scripts provide like "),a("code",[t._v("lf-unjoined")]),t._v(", "),a("code",[t._v("lf-slanted")]),t._v(", "),a("code",[t._v("lf-kufi")]),t._v(", etc.")]),t._v(" "),a("p",[t._v("The following code using Oriya script:")]),t._v(" "),a("div",{staticClass:"language-HTML extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("blockquote")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("lf-sans"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("lang")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("or"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("lf-xlight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" ଆର୍ଟିକିଲ୍ 1"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("lf-medium"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" ସମସ୍ତ ଲୋକ ମୁକ୍ତ ଏବଂ ସମ୍ମାନ ଏବଂ ଅଧିକାରରେ ସମାନ ଭାବରେ ଜନ୍ମଗ୍ରହଣ କରନ୍ତି | "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("blockquote")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("Will render as:*")]),t._v(" "),a("blockquote",[a("h1",{staticClass:"lf-sans lf-xlight",attrs:{lang:"or"}},[t._v("ଆର୍ଟିକିଲ୍ 1")]),t._v(" "),a("h3",{staticClass:"lf-serif lf-medium",attrs:{lang:"or"}},[t._v("ସମସ୍ତ ଲୋକ ମୁକ୍ତ ଏବଂ ସମ୍ମାନ ଏବଂ ଅଧିକାରରେ ସମାନ ଭାବରେ ଜନ୍ମଗ୍ରହଣ କରନ୍ତି | ")])]),t._v(" "),a("h3",{attrs:{id:"variable-fonts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#variable-fonts"}},[t._v("#")]),t._v(" Variable fonts")]),t._v(" "),a("p",[t._v("Variable fonts are exploding in popularity since they provide designers so much more flexibility to specify weight, width, slant or other characteristics with extreme precision. Lingua uses variable fonts for scripts wherever they are available, falling back to static fonts for older browsers. A major exception is CJK fonts (Chinese, Japanese, Korean), for which there are no variable fonts available due to the sheer size of those character sets.")]),t._v(" "),a("h3",{attrs:{id:"performance"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#performance"}},[t._v("#")]),t._v(" Performance")]),t._v(" "),a("p",[t._v("Lingua includes "),a("a",{attrs:{href:"https://www.npmjs.com/package/subfont",target:"_blank",rel:"noopener noreferrer"}},[t._v("subfont"),a("OutboundLink")],1),t._v(" as an optional dependency to create subsets of characters based on the actual content of your pages. We use the 'fout with a class' loading strategy described by Zach Leatherman "),a("a",{attrs:{href:"https://www.zachleat.com/web/comprehensive-webfonts/",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),a("OutboundLink")],1),t._v(". The use of variable fonts also reduces page-load times, especially if you use several weights of one font, each of which would need to be loaded as a separate file with non-variable fonts. Here are some "),a("a",{attrs:{href:"https://css-tricks",target:"_blank",rel:"noopener noreferrer"}},[t._v("stats"),a("OutboundLink")],1),t._v(" on variable font load times.")]),t._v(" "),a("p",[t._v("All of the default fonts (the Noto families) are compresssed and subsetted using Glyphhanger. We also add the "),a("code",[t._v("unicode-range")]),t._v(" property to subset the "),a("code",[t._v("@font-face")]),t._v(" rules so fonts are only loaded when glyphs used by unicode that block are called for. See "),a("a",{attrs:{href:"https://css-tricks.com/almanac/properties/u/unicode-range/",target:"_blank",rel:"noopener noreferrer"}},[t._v("this article"),a("OutboundLink")],1),t._v(" for more.")]),t._v(" "),a("h3",{attrs:{id:"browser-coverage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#browser-coverage"}},[t._v("#")]),t._v(" Browser coverage")]),t._v(" "),a("p",[t._v("By default our "),a("code",[t._v("@font-face")]),t._v(" rules only include woff and woff2 files which support browsers back to IE10. If you need to support browsers back to IE8 you can generate all the EOT files to do that in Lingua's sister project "),a("a",{attrs:{href:"https://github.com/tkoleary/webfont-factory",target:"_blank",rel:"noopener noreferrer"}},[t._v("Webfont Factory"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"the-noto-fonts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-noto-fonts"}},[t._v("#")]),t._v(" The Noto fonts")]),t._v(" "),a("p",[t._v("By default Lingua uses the fantastic open-source "),a("a",{attrs:{href:"https://www.google.com/get/noto/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Noto"),a("OutboundLink")],1),t._v(" fonts from Google. Because Noto fonts are designed to work together, you don't have to reconcile differences in character size, cap height, weight, or other stylistic variations that plague internationalization. If Noto is not stylistically appropriate for your brand you can replace some or all of the scripts with your preferred fonts in the variables files. If you don't already have webfont files for the fonts you want, use our sister project "),a("a",{attrs:{href:"https://github.com/tkoleary/webfont-factory",target:"_blank",rel:"noopener noreferrer"}},[t._v("Webfont Factory"),a("OutboundLink")],1),t._v(" to generate compressed and subsetted woff, woff2, eot, and "),a("code",[t._v("@font-face")]),t._v(" rules from your ttf files.")]),t._v(" "),a("p",[a("em",[t._v("*Where variable fonts are supported")])])])}),[],!1,null,null,null);e.default=r.exports}}]);